{"version":3,"sources":["blocks/loading/Loading.js","blocks/logo/HeaderLogo.js","components/button/ButtonSearch.js","components/form/SearchForm.js","blocks/actions/Actions.js","blocks/menu/ModalMenuPrimary.js","components/modal/SearchModal.js","components/modal/MenuModal.js","blocks/header/Header.js","blocks/footer/Copyright.js","blocks/footer/FooterMenu.js","blocks/footer/Footer.js","blocks/page-title/PageTitleHome.js","blocks/contacts/ContactUs.js","blocks/services/ServicesHome.js","blocks/services/ServicesContent.js","components/form/ContactForm.js","blocks/google-maps/GoogleMaps.js","pages/Home.js","components/form/SubscribeForm.js","blocks/about/AboutReviews.js","components/form/CommentForm.js","blocks/gallery/SwipeBox.js","blocks/page-title/PageTitle404.js","blocks/gallery/GalleryContent.js","components/button/BackToHome.js","pages/404.js","components/prsimjs/Prismjs.js","blocks/ui/blocks/MoreExamples.js","blocks/ui/components/slider/Slider.js","blocks/ui/components/dropdowns/children/DropdownHover.js","blocks/ui/components/dropdowns/children/OpenVariations.js","blocks/ui/components/dropdowns/children/DropdownExamples.js","blocks/ui/components/dropdowns/children/Directions.js","blocks/ui/components/dropdowns/children/MenuItems.js","blocks/ui/components/dropdowns/children/MenuAlignment.js","blocks/ui/components/dropdowns/children/MenuContent.js","blocks/ui/components/dropdowns/children/DropdownOptions.js","blocks/ui/components/dropdowns/children/DropdownUsage.js","blocks/ui/components/forms/children/FormExamples.js","blocks/ui/components/dropdowns/Dropdowns.js","blocks/ui/components/forms/children/FormControls.js","blocks/ui/components/forms/children/CheckboxesAndRadios.js","blocks/ui/components/forms/children/FormLayout.js","blocks/ui/components/forms/children/HelpText.js","blocks/ui/components/forms/children/DisabledForms.js","blocks/ui/components/forms/Forms.js","blocks/ui/components/modal/children/ModalCustom.js","blocks/ui/components/modal/children/LiveDemo.js","blocks/ui/components/modal/children/StaticBackdrop.js","blocks/ui/components/modal/children/ScrollingLongContent.js","blocks/ui/components/modal/children/VerticallyCentered.js","blocks/ui/components/modal/children/OptionalSize.js","blocks/ui/components/pop-up/PopUp.js","App.js","serviceWorker.js","index.js"],"names":["Loading","performTimeConsumingTask","a","Promise","resolve","setTimeout","this","data","loading","document","getElementsByClassName","classList","add","ua","navigator","userAgent","toLowerCase","indexOf","style","display","className","src","alt","Component","HeaderLogo","logoColor","title","href","width","window","innerWidth","ButtonSearch","type","SearchForm","role","method","action","placeholder","name","Actions","ModalMenuPrimary","props","location","pathname","MenuModal","context","menufunc","x","toggle","state","showModal","open","bind","close","setState","onClick","data-toggle","data-target","class","backgroundColor","Modal","show","onHide","backdrop","aria-labelledby","aria-hidden","dialogClassName","ref","node","chart","data-dismiss","aria-label","func","Header","id","color","Copyright","FooterMenu","dataFooterMenu","map","item","key","link","icon","Footer","PageTitleHome","console","log","backgroundImage","ContactsUs","ServicesContent","ServicesContentItemsData","imgSrc","ContactForm","email","subject","message","email_err","name_err","subject_err","message_err","return_msg","flag","handleChangeEmail","handleChangeName","handleChangeSubject","handleChangeMessage","handleSubmit1","e","target","value","test","preventDefault","emailjs","sendForm","then","result","text","reload","error","process","sendEmail","onSubmit","fontFamily","onChange","borderColor","Maps","mapRef","React","createRef","isScriptLoaded","isScriptLoadSucceed","address_latlng","google","maps","LatLng","Map","current","center","zoom","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","styles","GoogleMapsStyle","url","size","Size","setCenter","Marker","position","onError","scriptLoader","Home","inputElement","useRef","useEffect","scrollIntoView","behavior","block","body","charSet","httpEquiv","content","maxHeight","SwipeBoxComponent","isVisible","slide","showSlide","event","toggler","urls","swipeImg","rel","PageTitle404","BackToHome","page404","PrismCode","highlight","Prism","highlightElement","code","plugins","language","join","trim","MoreExamples","actionLink","actionLinkContent","contentAfter","contentBefore","DropdownHover","Dropdown","onMouseLeave","Toggle","variant","onMouseEnter","Fade","in","Menu","Item","OpenVariations","renderOnMount","DropdownExamples","DropdownButton","as","ButtonGroup","eventKey","active","Divider","SplitButton","DropdownType","idx","Directions","direction","drop","MenuItems","MenuAlignment","alignRight","data-display","MenuContent","to","spy","smooth","duration","htmlFor","DropdownOptions","Button","split","DropdownUsage","FormExamples","FormControls","multiple","rows","readOnly","defaultValue","CheckboxesAndRadios","disabled","defaultChecked","FormLayout","HelpText","aria-describedby","DisabledForms","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e3988f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Loading extends Component {\n    performTimeConsumingTask = async () => {\n        return new Promise( ( resolve ) =>\n            setTimeout(\n                () => {\n                    resolve( 'result' )\n                },\n                1000\n            )\n        )\n    };\n\n    async componentDidMount() {\n        // Preload data from an external API\n        // Preload data using AsyncStorage\n        const data = await this.performTimeConsumingTask();\n        var loading = document.getElementsByClassName( 'loading' );\n\n        if ( data !== null ) {\n            loading[0].classList.add( 'animated' );\n            loading[0].classList.add( 'slideOutRight' );\n\n            // Android check\n            var ua = navigator.userAgent.toLowerCase();\n            var isAndroid = ua.indexOf( 'android' ) > -1;\n\n            if ( isAndroid ) {\n                loading[0].style.display( 'none' );\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"loading\">\n                <div className=\"wrapper h-100\">\n                    <div className=\"d-flex justify-content-center align-items-center h-100\">\n                        <div className=\"loading-content\">\n                            <div className=\"logo logo-primary\">\n                                <img className=\"animated zoomin\" src=\"assets/img/logo/galogo.png\" alt=\"Logo\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;\n","import React from 'react';\n\nconst HeaderLogo = ( { logoColor } ) => {\n    return (\n        <div className=\"header-logo\">\n            <a className=\"logo logo-secondary transform-scale-h\" title=\"Logo\" href={ process.env.PUBLIC_URL + \"/\" }>\n                <img src={ \"assets/img/logo/galogo.png\" } alt=\"Logo\" style={{width: window.innerWidth<=999 ? \"43vw\": \"10vw\" }} />\n            </a>\n        </div>\n    );\n};\n\nexport default HeaderLogo;\n","import React from 'react';\n\nconst ButtonSearch = () => {\n    return (\n        <button type=\"submit\" className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space text-uppercase\">Search</button>\n    );\n};\n\nexport default ButtonSearch;\n","import React from 'react';\nimport ButtonSearch from '../../components/button/ButtonSearch';\n\nconst SearchForm = () => {\n    return (\n        <form className=\"search-form\" role=\"search\" method=\"get\" action={ process.env.PUBLIC_URL + \"/search-results\" }>\n            <div className=\"search input-group\">\n                <input className=\"form-control form-control-lg form-df\" type=\"text\" placeholder=\"Type here to search\" name=\"s\" />\n\n                <div className=\"input-group-append\">\n                    <ButtonSearch />\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default SearchForm;\n","import React from 'react';\n\nconst Actions = () => {\n    return (\n        <div className=\"actions\">\n            <div className=\"actions-items\">\n                <a className=\"actions-item\" href={ process.env.PUBLIC_URL + \"/contacts\" }>\n                    <span>Reservation</span>\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default Actions;\n","import React from 'react';\n\nconst ModalMenuPrimary = (props) => {\n    return (\n        <nav className=\"menu-primary\">\n            <ul className=\"nav\">\n            \n               \n                \n                <li className={ \"nav-item\" + (window.location.pathname === '/about' ? \" current-nav-item\" : \"\") }>\n                <a title=\"Insta\" href={ \"https://www.instagram.com/gotham_apples/\" }>Visit Instagram</a>\n                </li>\n         \n\n                {/* <li className={ \"nav-item\" + (window.location.pathname === '/flower' ? \" current-nav-item\" : \"\") }>\n                    <a title=\"flower\" href={ process.env.PUBLIC_URL + \"/flower\" }>Flower</a>\n                </li>\n\n                <li className={ \"nav-item\" + (window.location.pathname === \"/chef's-recommendations\" ? \" current-nav-item\" : \"\") }>\n                    <a title=\"chef's-recommendations\" href={ process.env.PUBLIC_URL + \"/chef's-recommendations\" }>chef's Recommendations</a>\n                </li>\n\n                <li className={ \"nav-item\" + (window.location.pathname === \"/edibles-chocolates-candies-and-gummies\" ? \" current-nav-item\" : \"\") }>\n                    <a title=\"/edibles-chocolates-candies-and-gummies\" href={ process.env.PUBLIC_URL + \"/edibles-chocolates-candies-and-gummies\" }>EDIBLES CHOCOLATES GUMMIES & CANDIES</a>\n                </li>\n\n                <li className={ \"nav-item\" + (window.location.pathname === '/thcvapes' ? \" current-nav-item\" : \"\") }>\n                    <a title=\"thcvapes\" href={ process.env.PUBLIC_URL + \"/thcvapes\" }>thc vapes</a>\n                </li>\n\n                <li className={ \"nav-item\" + (window.location.pathname === '/concentrates' ? \" current-nav-item\" : \"\") }>\n                    <a title=\"concentrates\" href={ process.env.PUBLIC_URL + \"/concentrates\" }>Concentrates</a>\n                </li>\n                <li className={ \"nav-item\" + (window.location.pathname === '/prerolled' ? \" current-nav-item\" : \"\") }>\n                    <a title=\"prerolled\" href={ process.env.PUBLIC_URL + \"/prerolled\" }>Pre Rolled</a>\n                </li>  */}\n            </ul>\n        </nav>\n    );\n};\n\nexport default ModalMenuPrimary;\n","import React, { Component, Fragment } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport HeaderLogo from '../../blocks/logo/HeaderLogo';\nimport SearchForm from '../form/SearchForm';\nimport Actions from '../../blocks/actions/Actions';\n\nclass SearchModal extends Component {\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"search-toggle\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto\" data-toggle=\"modal\" data-target=\"#search-modal\">search</button>\n                </div>\n\n                <Modal className=\"search-modal\"\n                       id=\"search-modal\"\n                       show={ this.state.showModal }\n                       onHide={ this.close }\n                       backdrop={ false }\n                       aria-labelledby=\"search-modal\"\n                       aria-hidden=\"true\"\n                       dialogClassName=\"modal-full\"\n                       ref={ node => this.chart = node }>\n                    <div className=\"wrapper\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header modal-header-top\">\n                                <div className=\"header-content d-flex justify-content-between w-100\">\n                                    <div className=\"header-left align-self-center\">\n                                        <div className=\"links\">\n                                            <div className=\"links-items\">\n                                                <div className=\"links-item\">\n                                                    <a href={ process.env.PUBLIC_URL + \"/\" }\n                                                       className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto\">home</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"header-center align-self-center\">\n                                        <HeaderLogo logoColor=\"light\" />\n                                    </div>\n\n                                    <div className=\"header-right d-flex justify-content-end\">\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"search-close-toggle\">\n                                                <button onClick={ this.close } type=\"button\" className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto\" data-dismiss=\"modal\" aria-label=\"Close\">Close search\n                                                </button>\n                                            </div>\n                                        </div>\n\n                                        <Actions />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"modal-body modal-body-centered\">\n                                <SearchForm />\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nexport default SearchModal;\n","import React, { Component, Fragment } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport HeaderLogo from '../../blocks/logo/HeaderLogo';\nimport SearchModal from '../../components/modal/SearchModal';\nimport ModalMenuPrimary from '../../blocks/menu/ModalMenuPrimary';\nimport '../../assets/sass/menuicon.css';\nimport ModalMenuSecondary from '../../blocks/menu/ModalMenuSecondary';\nimport ModalMenuLanguages from '../../blocks/menu/ModalMenuLanguages';\nimport Actions from '../../blocks/actions/Actions';\n\n\n\n\nclass MenuModal extends Component {\n    constructor(  props, context ) {\n        super( props, context  );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n        this.menufunc = this.menufunc.bind( this );\n    }\n\n   \n\n      menufunc = (x) => {\n        x.classList.toggle(\"change\");\n      }\n\n    open() {\n        this.setState( { showModal: true } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"menu-toggle\">\n\n\n                    <button onClick={ this.open.bind( this ) }  type=\"button\" className=\"btn btn-lg  border-0 p-0 min-w-auto text-uppercase\" data-toggle=\"modal\" data-target=\"#menu-modal\">\n                    <div class=\"container\" >\n                            <div class=\"bar1\" style={{backgroundColor:window.location.pathname===\"/\" ? 'white' : '#333' }}></div>\n                            <div class=\"bar2\" style={{backgroundColor:window.location.pathname===\"/\" ? 'white' : '#333' }}></div>\n                            <div class=\"bar3\" style={{backgroundColor:window.location.pathname===\"/\" ? 'white' : '#333' }}></div>\n                    </div>\n\n\n                    </button>\n                </div>\n\n                <Modal\n                    className=\"menu-modal\"\n                    show={ this.state.showModal }\n                    onHide={ this.close }\n                    backdrop={ false }\n                    aria-labelledby=\"menu-modal\"\n                    aria-hidden=\"true\"\n                    dialogClassName=\"modal-full\"\n                    ref={ node => this.chart = node }>\n                    <div className=\"wrapper\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header modal-header-top\">\n                                <div className=\"header-content d-flex justify-content-between w-100\">\n                                    <div className=\"header-left align-self-center\">\n                                        <div className=\"links\">\n                                            <div className=\"links-items\">\n                                                <div className=\"links-item\">\n                                                    <a href={ process.env.PUBLIC_URL + \"/\" } className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto text-uppercase\" data-toggle=\"modal\" data-target=\"#menu-modal\">home</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"header-center align-self-center\">\n                                        <HeaderLogo logoColor=\"light\" />\n                                    </div>\n\n                                    <div className=\"header-right d-flex justify-content-end\">\n                                        <div className=\"d-flex align-items-center\">\n                                            {/* <SearchModal /> */}\n\n                                            <div className=\"menu-close-toggle\">\n                                                <button onClick={ this.close } type=\"button\" className=\"btn btn-lg  border-0 p-0 min-w-auto\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                <div class=\"container\" >\n                                                  <div class=\"x1\"></div>\n                                                  <div class=\"x2\"></div>\n                                                  <div class=\"x3\"></div>\n                                                 </div>\n                                                </button>\n                                            </div>\n                                        </div>\n\n                                       \n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"modal-body modal-body-centered menu-primary-show-1-nav-item menu-secondary-show-1-nav-item\">\n                                <div className=\"animated zoomin w-100\">\n                                    <ModalMenuPrimary  func={this.props.func}/>\n\n                                    {/* <ModalMenuSecondary /> */}\n\n                                    <div className=\"modal-text\">\n                                        <p>© 2022 Gotham Apples.</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"modal-footer\">\n                                {/* <ModalMenuLanguages /> */}\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nexport default MenuModal;\n","import React from 'react';\nimport HeaderLogo from '../../blocks/logo/HeaderLogo';\nimport SearchModal from '../../components/modal/SearchModal';\nimport MenuModal from '../../components/modal/MenuModal';\nimport Actions from \"../actions/Actions\";\n\nconst Header = (props, { logoColor } ) => {\n    return (\n        <header id=\"header\" className=\"site-header\">\n            <div className=\"wrapper\">\n                <div className=\"header-content d-flex justify-content-between\">\n                    <div className=\"header-left align-self-center\">\n                        <div className=\"links\">\n                            <div className=\"links-items\">\n                                <div className=\"links-item\">\n                                    <a href={ \"https://www.instagram.com/gotham_apples\"} className=\"btn btn-link border-0 p-0 min-w-auto\">\n                                    <i class=\"fab fa-instagram fa-3x\" style={{color:\"#FFFFF\"}}></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"header-center align-self-center\">\n                        <HeaderLogo logoColor={ logoColor } />\n                    </div>\n\n                    <div className=\"header-right d-flex justify-content-end\">\n                        <div className=\"d-flex align-items-center\">\n                            {/* <SearchModal /> */}\n\n                            <MenuModal func={props.func} />\n                        </div>\n{/* \n                        <Actions /> */}\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Copyright = () => {\n    return (\n        <div className=\"copyright\">\n            <p>© 2022 Gotham Apples</p>\n        </div>\n    );\n};\n\nexport default Copyright;\n","import React from 'react';\nimport dataFooterMenu from '../../data/footer/footerMenu';\n\nconst FooterMenu = () => {\n    return (\n        <nav className=\"menu-secondary\">\n            <ul className=\"nav\">\n                { dataFooterMenu && dataFooterMenu.map( ( item, key ) => {\n                    return (\n                        <li key={ key } className=\"nav-item\">\n                            <a title={ item.title } href={ item.link }>\n                                <i className={ item.icon }></i>\n                            </a>\n                        </li>\n                    );\n                } ) }\n            </ul>\n        </nav>\n    );\n};\n\nexport default FooterMenu;\n","import React from 'react';\nimport Copyright from '../footer/Copyright';\nimport FooterMenu from '../footer/FooterMenu';\n\nconst Footer = () => {\n    return (\n        <footer id=\"footer\" className=\"site-footer\">\n            <div className=\"wrapper\">\n                <div className=\"footer\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"align-self-center\">\n                            <Copyright />\n                        </div>\n\n                        <div className=\"align-self-center\">\n                            <FooterMenu />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-scroll';\n\n\nconst PageTitleHome = () => {\n    console.log(window.innerWidth)\n    return (\n        <section id=\"page-title\" className=\"block with-img\" style={ { backgroundImage: 'url(assets/img/bg/bannermainfinalpng.png)' } }>\n            <div className=\"wrapper text-center d-flex\">\n                <div className=\"align-self-center w-100\">\n                    <div className=\"title\">\n                        <h1 className=\"large text-uppercase\">Gotham Apples</h1>\n                        {window.innerWidth<911 ? \n                        <a href={ \"https://www.instagram.com/gotham_apples\"} className=\"btn btn-link border-0 p-0 min-w-auto\">\n                        <i class=\"fab fa-instagram fa-5x\" ></i>\n                        </a>\n            \n                        : '' }\n                    </div>\n\n                    {/* <div className=\"description spacer p-top-lg\">\n                        <p>For Gifting 🎁 Menu</p>\n                    </div>\n\n                    <div className=\"spacer p-top-lg no-space\">\n                        <Link href=\"#contact-us\"\n                              to=\"contact-us\"\n                              spy={ true }\n                              smooth={ true }\n                              duration={ 0 }\n                              className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space text-uppercase scroll-to-id\">\n                            Scroll\n                        </Link>\n                    </div> */}\n\n                    {/* <nav className=\"languages lang-position\">\n                        <ul className=\"nav\">\n                            <li className=\"lang-item current-lang\">\n                                <a title=\"en\" href={ process.env.PUBLIC_URL + \"/\" }>en</a>\n                            </li>\n                        </ul>\n                    </nav> */}\n                </div>\n            </div>\n\n            <div className=\"page-title-bg-color\"></div>\n        </section>\n    );\n};\n\nexport default PageTitleHome;\n","import React from 'react';\n\nconst ContactsUs = () => {\n    return (\n        <section id=\"contact-us\" className=\"block\" style={ { backgroundImage: 'url(assets/img/bg/empire.png)' } }>\n            <div className=\" text-tertiary spacer p-top-xl p-bottom-xl\">\n                <div className=\"wrapper text-center\">\n                   \n\n                    <a href={ \"https://www.instagram.com/gotham_apples/\" } className=\"btn btn-outline-tertiary text-uppercase\">Visit Us on Instagram</a>\n                </div>\n            </div>\n        </section>\n\n\n\n\n\n\n\n\n\n    );\n};\n\nexport default ContactsUs;\n","import React, { Component } from 'react';\nimport Swiper from 'swiper';\n\nclass ServicesHome extends Component {\n\n    constructor(props){\n        super(props);\n\n    }\n\n\n    componentDidMount() {\n        new Swiper( '.adv-slider-services .adv-swiper-container', {\n            // ADV swiper\n            noSwipingClass: 'adv-swiper-no-swiping',\n            containerModifierClass: 'adv-swiper-container-',\n            slideClass: 'adv-swiper-slide',\n            slideBlankClass: 'adv-swiper-slide-invisible-blank',\n            slideActiveClass: 'adv-swiper-slide-active',\n            slideDuplicateActiveClass: 'adv-swiper-slide-duplicate-active',\n            slideVisibleClass: 'adv-swiper-slide-visible',\n            slideDuplicateClass: 'adv-swiper-slide-duplicate',\n            slideNextClass: 'adv-swiper-slide-next',\n            slideDuplicateNextClass: 'adv-swiper-slide-duplicate-next',\n            slidePrevClass: 'adv-swiper-slide-prev',\n            slideDuplicatePrevClass: 'adv-swiper-slide-duplicate-prev',\n            wrapperClass: 'adv-swiper-wrapper',\n            navigation: {\n                disabledClass: 'adv-swiper-button-disabled',\n                hiddenClass: 'adv-swiper-button-hidden',\n                lockClass: 'adv-swiper-button-lock',\n                nextEl: '.adv-2-swiper-button-next',\n                prevEl: '.adv-2-swiper-button-prev'\n            },\n            spaceBetween: 0,\n            slidesPerView: 'auto'\n        } );\n    }\n\n    render() {\n        return (\n            <section id=\"services\" className=\"block\">\n                <div className=\"adv-slider-services\">\n                    <div className=\"adv-swiper-container\">\n                        <div className=\"adv-swiper-wrapper services-items clearfix\">\n                            {/* <div title=\"Brooklyn\" className=\"adv-swiper-slide services-item\" onClick={this.props.func}>\n                                <div className=\"services-item-content\">\n                                    <h3 className=\"services-item-t-head\">Brooklyn</h3>\n\n                                    <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space\">Visit</span>\n                                </div>\n\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/city.png\" alt=\"Haircut\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"img-bg-color\"></div>\n                            </div> */}\n\n                            <div title=\"Queens\" className=\"adv-swiper-slide services-item\" onClick={this.props.func}>\n                                <div className=\"services-item-content\">\n                                    <h3 className=\"services-item-t-head\">Queens\n</h3>\n\n                                    <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space\">Visit</span>\n                                </div>\n\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/subway.png\" alt=\"subway\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"img-bg-color\"></div>\n                            </div>\n\n                            {/* <div title=\"Staten Island\" className=\"adv-swiper-slide services-item\" onClick={this.props.func}>\n                                <div className=\"services-item-content\">\n                                    <h3 className=\"services-item-t-head\">Staten Island </h3>\n\n                                    <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space\">Visit</span>\n                                </div>\n\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/staten.png\" alt=\"staten island\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"img-bg-color\"></div>\n                            </div> */}\n\n                            <div title=\"Manhattan\" className=\"adv-swiper-slide services-item\" onClick={this.props.func}>\n                                <div className=\"services-item-content\">\n                                    <h3 className=\"services-item-t-head\">Manhattan </h3>\n\n                                    <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space\">Visit</span>\n                                </div>\n\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/manhattan.png\" alt=\"Manhattan\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"img-bg-color\"></div>\n                            </div>\n{/* \n                            <a title=\"THC Vapes\" className=\"adv-swiper-slide services-item\" href={ process.env.PUBLIC_URL + \"/thcvapes\" }>\n                                <div className=\"services-item-content\">\n                                    <h3 className=\"services-item-t-head\">💨 THC Vape🎨Cartridges🕴↘️⤵️ 🧃 🆕 🧃 🧃🆕🧃 ⬇️↙️(Live Resin↩️510↪️Distillate)THREAD\n</h3>\n\n                                    <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space\">read more</span>\n                                </div>\n\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/vapecat.png\" alt=\"Beard Trim\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"img-bg-color\"></div>\n                            </a> */}\n                        </div>\n\n                        <div className=\"adv-2-swiper-button-prev\">\n                            <span>\n                                <span className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto\">Previous</span>\n                            </span>\n                        </div>\n\n                        <div className=\"adv-2-swiper-button-next\">\n                            <span>\n                                <span className=\"btn btn-lg btn-after-dot btn-link border-0 p-0 min-w-auto\">Next</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default ServicesHome;\n","import React from 'react';\nimport ServicesContentItemsData from '../../data/services/servicesContentItems';\n\nconst ServicesContent = (props) => {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"content\">\n                <div className=\"row gutter-width-sm with-pb-sm services-items\">\n                    { ServicesContentItemsData && ServicesContentItemsData.map( ( item, key ) => {\n                        return (\n                            <div key={ key } className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                                <div title={ item.title } className=\"services-item\" onClick={props.func}>\n                                    <div className=\"services-item-content\">\n                                        <h3 className=\"services-item-t-head\">{ item.title }</h3>\n\n                                        <span className=\"btn btn-link border-0 p-0 min-w-auto link-no-space\">Visit</span>\n                                    </div>\n\n                                    <div className=\"img object-fit\">\n                                        <div className=\"object-fit-cover\">\n                                            <img src={ item.imgSrc } alt={ item.title } />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"img-bg-color\"></div>\n                                </div>\n                            </div>\n                        );\n                    } ) }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ServicesContent;\n","\nimport React,{Component} from 'react'; \nimport emailjs from '@emailjs/browser';\n const SERVICE_ID= process.env.REACT_APP_SERVICE_ID;\n const TEMPLATE_ID= process.env.REACT_APP_TEMPLATE_ID;\n const USER_ID= process.env.REACT_APP_USER_ID;\n\n const y= \"service_hld4r8l\";\n const x= \"template_urbj0d2\";\n const a= \"user_eEhOJqTE4ean3M1Z7k1V5\";\n\nclass ContactForm extends Component{\n\n    constructor(){\n        super();\n        this.state={ email:'',name:'',subject:'',message:'',email_err:'',name_err:'',subject_err:'',message_err:'',return_msg:'',flag : false }\n\n         this.handleChangeEmail = this.handleChangeEmail.bind(this);\n         this.handleChangeName = this.handleChangeName.bind(this);\n         this.handleChangeSubject = this.handleChangeSubject.bind(this);\n         this.handleChangeMessage = this.handleChangeMessage.bind(this);\n         this.handleSubmit1 = this.handleSubmit1.bind(this);\n    }\n\n    handleChangeEmail(e){\n        this.setState({email:  e.target.value});\n        var EmailReg =  /(\\w+)\\s(\\w+)/;\n        if(e.target.value === '') \n          this.setState({email_err: 'Required Field'});\n        else if(EmailReg.test(e.target.value)) \n          this.setState({email_err: ''});\n        else \n          this.setState({email_err: 'Enter Valid Email'});\n      }\n\n      handleChangeName(e){\n        this.setState({name:  e.target.value});\n          if(e.target.value === '') \n            this.setState({name_err: 'Required Field'});\n          else \n            this.setState({name_err: ''});\n      }\n      handleChangeSubject(e){\n        this.setState({subject:  e.target.value});\n          if(e.target.value === '') \n            this.setState({subject_err: 'Required Field'});\n          else \n            this.setState({subject_err: ''});\n      }\n      handleChangeMessage(e){\n        this.setState({message:  e.target.value});\n          if(e.target.message === '') \n            this.setState({message_err: 'Required Field'});\n          else \n            this.setState({message_err: ''});\n      }\n\n      sendEmail(e){\n        e.preventDefault();\n\n    emailjs.sendForm(y, x, \"#contactForm\", a)\n      .then((result) => {\n          console.log(\"yesyy\", result.text);\n          window.location.reload()\n      }, (error) => {\n          console.log(\"noo\", error.text);\n          console.log(SERVICE_ID)\n          console.log(TEMPLATE_ID)\n          console.log(USER_ID)\n          window.location.reload()\n      });\n     \n      }\n\n\n\n      handleSubmit1(e)\n      {\n          if(this.state.name === '') \n              this.setState({name_err: 'Required Field'});\n             \n      \n          if(this.state.subject === '')\n             this.setState({subject_err: 'Required Field'});\n         if(this.state.message === '')\n             this.setState({message_err: 'Required Field'});\n\n             if(this.state.name === '' || this.state.subject === '' || this.state.message === '')\n             {\n                this.setState({return_msg: 'Fill All First', flag: true });\n             }\n             else\n             {\n                this.setState({return_msg: 'Success.', flag: true});\n                this.sendEmail(e)\n               \n             }\n      }\n    render(){\n\n    return(\n  \n            <div className=\"contact-form\">\n              <div id=\"message\">\n                  {this.state.flag ? \n                        <div className=\"alert alert-success\">\n                        <strong>{this.state.return_msg}</strong>\n                        </div>\n                    : null}\n              </div> \n              <form method=\"post\" id=\"contactForm\" onSubmit={this.handleSubmit1} >\n                  <div className=\"row\">\n                  <div className=\"col-md-6 col-sm-12\" style={{fontFamily: \"Oswald-Medium\"}}>\n                      <div className=\"input-group\" > \n                          <input  type=\"text\" id=\"name\"  value={this.state.name} name=\"from_name\" onChange={this.handleChangeName} className=\"form-control\" placeholder=\"Full Name:\" style={{borderColor: \"#AB79AA\"}} /> \n                          <span id=\"err\">{this.state.name_err}</span>\n                      </div>\n                      {/* <div className=\"input-group\"> \n                          <input type=\"text\" className=\"form-control\" value={this.state.email}name=\"from_email\" onChange={this.handleChangeEmail} id=\"email\" placeholder=\"Email:\" />\n                          <span id=\"err\">{this.state.email_err}</span>\n                      </div>                             */}\n                      <div className=\"input-group\"> \n                          <input type=\"text\" id=\"tel\" value={this.state.subject} name=\"from_phone\"  onChange={this.handleChangeSubject} className=\"form-control\" placeholder=\"Number:\" style={{borderColor: \"#AB79AA\"}}/>\n                          <span id=\"err\">{this.state.subject_err}</span>\n                      </div> \n                  </div> \n                  <div className=\"form-group col-md-6 col-sm-12\">\n                      <div className=\"input-group input_group_full_width\" style={{fontFamily: \"Oswald-Medium\"}}> \n                          <textarea name=\"comments\" id=\"message\"  value={this.state.message} name= \"message\" onChange={this.handleChangeMessage} rows=\"6\" className=\"form-control\" placeholder=\"Message\" style={{borderColor: \"#AB79AA\"}}></textarea>\n                          <span id=\"err\">{this.state.message_err}</span>\n                      </div> \n                  </div> \n                  <div className=\"col-sm-12\">\n                    <button type=\"button\" name=\"send\" onClick={this.handleSubmit1} className=\"btn btn-outline-secondary text-uppercase\" >Send Message</button>\n                    <div id=\"simple-msg\"></div>\n                  </div>\n   \n              </div> \n              </form> \n            </div> \n\n        )\n\n    }\n}\n\n \nexport default ContactForm;\n\n\n\n// import React, { Component } from 'react';\n// import axios\n//     from 'axios';\n\n// class ContactForm extends Component {\n//     constructor( props ) {\n//         super( props );\n\n//         this.state = {\n//             values: {\n//                 name: '',\n//                 services: '',\n//                 phone: '',\n//                 email: '',\n//                 message: '',\n//                 date: ''\n//             },\n//             successMessage: \"Sender's message was sent successfully\",\n//             warningMessage: 'Fill up the form, please!',\n//             errorMessage: 'Something go wrong. Try again later!',\n//             alertClass: '',\n//             responseMessage: '',\n//             alertTimeout: '',\n//             delay: 5000\n//         };\n//     }\n\n//     submitForm = async e => {\n//         e.preventDefault();\n\n//         if ( document.querySelector( '#alert' ) ) {\n//             document.querySelector( '#alert' ).remove();\n//         }\n\n//         this.setState( { isSubmitting: true } );\n\n//         axios.post( 'https://store.adveits.com/API/form.php', this.state.values, {\n//             headers: {\n//                 'Access-Control-Allow-Origin': '*',\n//                 'Content-Type': 'application/json; charset=UTF-8'\n//             },\n//         }, ).then( response => {\n//             if ( response.data.status === 'success' ) {\n//                 this.setState( { responseMessage: this.state.successMessage } );\n//             }\n\n//             if ( response.data.status === 'warning' ) {\n//                 this.setState( { responseMessage: this.state.warningMessage } );\n//             }\n\n//             if ( response.data.status === 'error' ) {\n//                 this.setState( { responseMessage: this.state.errorMessage } );\n//             }\n\n//             this.callAlert( this.state.responseMessage, response.data.status )\n//         } ).catch( error => {\n//             this.callAlert( this.state.errorMessage, 'error' )\n//         } );\n//     };\n\n//     removeAlert = () => {\n//         clearTimeout( this.state.alertTimeout );\n//         this.setState( {\n//             alertTimeout: setTimeout( function() {\n//                     var element = document.querySelector( '#alert' );\n//                     element.classList.remove( 'fadeIn' );\n//                     element.classList.add( 'fadeOut' );\n//                     setTimeout( function() {\n//                         element.remove()\n//                     }, 900 )\n//                 }, this.state.delay\n//             )\n//         } );\n//     };\n\n//     callAlert = ( message, type ) => {\n//         if ( ! document.querySelector( '#alert' ) ) {\n//             if ( type === 'success' ) {\n//                 this.setState( { alertClass: 'success' } )\n//             }\n\n//             if ( type === 'error' ) {\n//                 this.setState( { alertClass: 'danger' } )\n//             }\n\n//             if ( type === 'warning' ) {\n//                 this.setState( { alertClass: 'warning' } )\n//             }\n\n//             var alert = '<div id=\"alert\" class=\"animated fadeIn alert alert--shadow alert-' + this.state.alertClass + '\">' + message + '</div>';\n\n//             var element = document.querySelector( '#cf-1' );\n\n//             element.insertAdjacentHTML( 'beforeend', alert );\n\n//             this.removeAlert();\n//         }\n//     };\n\n//     handleInputChange = e =>\n//         this.setState( {\n//             values: {\n//                 ...this.state.values,\n//                 [e.target.name]: e.target.value\n//             }\n//         } );\n\n//     render() {\n//         return (\n//             <form method=\"post\" onSubmit={ this.submitForm } id=\"cf-1\" className=\"contact-form\">\n//                 <div className=\"form-group form-group-lg\">\n//                     <p className=\"input-group gutter-width-sm no-space\">\n//                         <span className=\"gutter-width\">\n//                             <label className=\"form-label-lg before after mb-0\" htmlFor=\"cf-1-name-surename\">Name and Surename *</label>\n\n//                             <input name=\"name\"\n//                                    value={ this.state.values.name }\n//                                    onChange={ this.handleInputChange }\n//                                    type=\"text\"\n//                                    id=\"cf-1-name-surename\"\n//                                    placeholder=\"Your name here\"\n//                                    required=\"required\"/>\n//                         </span>\n\n//                         <span className=\"gutter-width\">\n//                             <label className=\"form-label-lg before after mb-0\" htmlFor=\"cf-1-services\">Choose a service *</label>\n\n//                             <select name=\"services\"\n//                                     htmlFor=\"cf-1-services\"\n//                                     id=\"cf-1-services\"\n//                                     value={ this.state.values.services }\n//                                     onChange={ this.handleInputChange }>\n//                                 <option value=\"hair-treatments\">Haircut</option>\n//                                 <option value=\"face-and-body\">Shave</option>\n//                                 <option value=\"hands-feets\">Haircut & Shave</option>\n//                                 <option\n//                                     value=\"haircuts-for-men\">Beard Trim</option>\n//                             </select>\n//                         </span>\n//                     </p>\n//                 </div>\n\n//                 <div className=\"form-group form-group-lg\">\n//                     <p className=\"input-group gutter-width-sm no-space\">\n//                         <span className=\"gutter-width\">\n//                             <label className=\"form-label-lg before after mb-0\" htmlFor=\"cf-1-phone\">Your phone number *</label>\n\n//                             <input name=\"phone\"\n//                                    value={ this.state.values.phone }\n//                                    onChange={ this.handleInputChange }\n//                                    type=\"text\"\n//                                    id=\"cf-1-phone\"\n//                                    placeholder=\"Your phone here\"\n//                                    required=\"required\"/>\n//                         </span>\n\n//                         <span className=\"gutter-width\">\n//                             <label className=\"form-label-lg before after mb-0\" htmlFor=\"cf-1-date\">Choose an appointment date</label>\n//                             <input name=\"date\"\n//                                    value={ this.state.values.date }\n//                                    onChange={ this.handleInputChange }\n//                                    type=\"text\"\n//                                    id=\"cf-1-date\"\n//                                    placeholder=\"dd/mm/yyyy\"/>\n//                         </span>\n//                     </p>\n//                 </div>\n\n//                 <div className=\"form-group form-group-lg\">\n//                     <label className=\"form-label-lg before after mb-0\" htmlFor=\"cf-1-message\">Message</label>\n\n//                     <textarea name=\"message\"\n//                               value={ this.state.values.message }\n//                               onChange={ this.handleInputChange }\n//                               id=\"cf-1-message\"\n//                               placeholder=\"Your message here\"></textarea>\n//                 </div>\n\n//                 <div className=\"form-group form-group-lg mb-0\">\n//                     <button type=\"submit\" className=\"btn btn-outline-secondary text-uppercase\">Book Now</button>\n//                 </div>\n//             </form>\n//         );\n//     }\n// }\n\n// export default ContactForm;\n\n\n\n","import React from 'react';\nimport scriptLoader from 'react-async-script-loader';\nimport GoogleMapsStyle from '../../data/google-maps/googleMapsStyle';\n\nclass Maps extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.mapRef = React.createRef();\n        this.map = null;\n    }\n\n    componentWillReceiveProps( { isScriptLoaded, isScriptLoadSucceed } ) {\n        if ( isScriptLoaded && !this.props.isScriptLoaded ) {\n            // 189 Bedford Ave, Brooklyn, NY 11211, United States\n            var address_latlng = new window.google.maps.LatLng( 40.717480, -73.957730 );\n            // load finished\n            if ( isScriptLoadSucceed ) {\n                this.map = new window.google.maps.Map( this.mapRef.current, {\n                    center: address_latlng,\n                    zoom: 18,\n                    zoomControl: false,\n                    mapTypeControl: false,\n                    scaleControl: false,\n                    streetViewControl: false,\n                    rotateControl: false,\n                    fullscreenControl: false,\n                    styles: GoogleMapsStyle\n                } );\n\n                var icon = {\n                    url: '../../assets/img/demo/16_img.png',\n                    size: new window.google.maps.Size( 112, 118 )\n                };\n\n                this.map.setCenter( address_latlng );\n\n                new window.google.maps.Marker( {\n                    position: address_latlng,\n                    map: this.map,\n                    icon: icon\n                } );\n\n            } else this.props.onError();\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"google-maps\" ref={ this.mapRef }></div>\n        );\n    }\n}\n\nexport default scriptLoader( ['https://maps.googleapis.com/maps/api/js?key=AIzaSyAtFb35xhesKqL6CU3GSJx7sTssDd33pjs'] )( Maps );\n","import React, { Fragment } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport { useEffect, useRef } from \"react\";\nimport Loading from '../blocks/loading/Loading';\nimport Header from '../blocks/header/Header';\nimport Footer from '../blocks/footer/Footer';\nimport PageTitleServices from '../blocks/page-title/PageTitleServices';\nimport PageTitleHome from '../blocks/page-title/PageTitleHome';\nimport ContactsUs from \"../blocks/contacts/ContactUs\";\nimport ServicesHome from '../blocks/services/ServicesHome';\nimport ServicesContent from '../blocks/services/ServicesContent';\nimport ContactForm from '../components/form/ContactForm';\nimport AboutsUs from '../blocks/about/AboutUs';\nimport News from '../blocks/news/News';\nimport GoogleMaps from '../blocks/google-maps/GoogleMaps';\nimport ContactsInside from '../blocks/contacts/Contacts';\nimport Newsletter from '../blocks/newsletter/Newsletter';\nimport BackToServices from '../components/button/BackToServices';\n\n\n\n\n\n  \n\nconst Home = () => {\n    const inputElement = useRef();\n\n   \nuseEffect(() => {\n\n    if (window.location.pathname===\"/form\") {\n        inputElement.current.scrollIntoView({behavior: \"smooth\", block: \"end\"})\n    }\n    \n\n\n\n\n    \n    \n    \n  }, [window.location.pathname]);\n\n\n\n  const goToContact = (id) => {\n    inputElement.current.scrollIntoView({behavior: \"smooth\", block: \"end\"}) \n  }\n\n\n\n    document.body.classList.add( 'home' );\n    document.body.classList.add( 'header-absolute-true' );\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <title>Home | 🎇 Gotham 🍏’s  Gifting 🎁 Menu:📍MORE Flavors = More FUN🌈 all ⛽️ no Brakes</title>\n\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                <meta name=\"description\" content=\"\" />\n                <meta name=\"keywords\" content=\"\" />\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\n                <meta name=\"googlebot\" content=\"index, follow\" />\n                <meta name=\"google\" content=\"notranslate\" />\n                <meta name=\"format-detection\" content=\"telephone=no\" />\n            </MetaTags>\n\n            <Loading />\n\n            <Header logoColor=\"light\" />\n\n            <main id=\"main\" className=\"site-main content-no-spacing\">\n                <div className=\"content\">\n                    <div className=\"clearfix\">\n                        <PageTitleHome />\n\n                        \n                        \n                                \n                        {/* <ServicesHome func={goToContact}/> */}\n                          \n                        \n                                {/* <PageTitleServices /> */}\n\n                            <div id=\"page-content\" className=\"spacer p-top-l\">\n                               \n                                <ContactsUs />\n                           \n                            </div>\n                            <div id=\"page-content\" className=\"spacer p-top-xl\">\n                               \n                                \n                                <ServicesContent func={goToContact}/>\n                            </div>\n\n                          \n                           \n                    \n\n\n                        <div id=\"page-content\" className=\"spacer p-top-xl\">\n                    <div className=\"wrapper\">\n                        <div className=\"content\">\n                            <div className=\"clearfix\">\n                          \n\n                              <div className=\"spacer p-top-xl\" ref={inputElement}>\n                                    <div className=\"title\">\n                                        <h2 className=\"text-uppercase\">Let’s get Connected</h2>\n                                    </div>\n\n                                    <div className=\"row gutter-width-sm with-pb-xl spacer p-top-lg\">\n                                        <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-12\">\n                                            {/* <ContactsInside /> */}\n                                            <div className=\"header-logo\" style={{maxHeight: \"350px\"}}>\n                                                <a className=\"logo logo-secondary transform-scale-h\" title=\"Logo\" href={ \"https://www.instagram.com/gotham_apples/\" }>\n                                                    <img src={ \"assets/img/bg/contactbannerbutton.png\" } alt=\"Logo\" style={{maxHeight: \"600px\",}}/>\n                                                </a>\n                                               \n                                            </div>\n                                            \n                                        </div>\n\n                                        <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-12\">\n                                            <div className=\"contact-form-shortcode\">\n                                                <ContactForm />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                        {/* <ServicesContent /> */}\n\n                        {/* <AboutsUs /> */}\n                        {/* <ContactsUs /> */}\n                        {/* <div id=\"img\" className=\"block spacer p-top-xl\">\n                            <div className=\"img-no-wrap-1\">\n                                <div className=\"img object-fit\">\n                                    <div className=\"object-fit-cover\">\n                                        <img src=\"assets/img/bg/bannerbottom.jpg\" alt=\"Gotham Apples\" />\n                                      \n                                    </div>\n                                </div>\n                            </div>\n                        </div> */}\n\n                        {/* <News />\n\n                        <Newsletter /> */}\n                    </div>\n                </div>\n            </main>\n\n            <Footer />\n        </Fragment>\n    );\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass SubscribeForm extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            values: {\n                email: ''\n            },\n            successMessage: \"Sender's message was sent successfully\",\n            warningMessage: 'Fill up the form, please!',\n            errorMessage: 'Something go wrong. Try again later!',\n            alertClass: '',\n            responseMessage: '',\n            alertTimeout: '',\n            delay: 5000\n        };\n    }\n\n    submitForm = async e => {\n        e.preventDefault();\n\n        if ( document.querySelector( '#alert' ) ) {\n            document.querySelector( '#alert' ).remove();\n        }\n\n        this.setState( { isSubmitting: true } );\n\n        axios.post( 'https://store.adveits.com/API/form.php', this.state.values, {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json; charset=UTF-8'\n            },\n        }, ).then( response => {\n            if ( response.data.status === 'success' ) {\n                this.setState( { responseMessage: this.state.successMessage } );\n            }\n\n            if ( response.data.status === 'warning' ) {\n                this.setState( { responseMessage: this.state.warningMessage } );\n            }\n\n            if ( response.data.status === 'error' ) {\n                this.setState( { responseMessage: this.state.errorMessage } );\n            }\n\n            this.callAlert( this.state.responseMessage, response.data.status )\n        } ).catch( error => {\n            this.callAlert( this.state.errorMessage, 'error' )\n        } );\n\n    };\n\n    removeAlert = () => {\n        clearTimeout( this.state.alertTimeout );\n\n        this.setState( {\n            alertTimeout: setTimeout( function () {\n                    var element = document.querySelector( '#alert' );\n                    element.classList.remove( 'fadeIn' );\n                    element.classList.add( 'fadeOut' );\n\n                    setTimeout( function () {\n                        element.remove()\n                    }, 900 )\n                }, this.state.delay\n            )\n        } );\n    };\n\n    callAlert = ( message, type ) => {\n        if ( !document.querySelector( '#alert' ) ) {\n            if ( type === 'success' ) {\n                this.setState( { alertClass: 'success' } )\n            }\n\n            if ( type === 'error' ) {\n                this.setState( { alertClass: 'danger' } )\n            }\n\n            if ( type === 'warning' ) {\n                this.setState( { alertClass: 'warning' } )\n            }\n\n            var alert = '<div id=\"alert\" class=\"animated fadeIn alert alert--shadow alert-' + this.state.alertClass + '\">' + message + '</div>';\n\n            var element = document.querySelector( '.newsletter-form' );\n\n            element.insertAdjacentHTML( 'beforeend', alert );\n\n            this.removeAlert();\n        }\n    };\n\n    handleInputChange = e =>\n        this.setState( {\n            values: {\n                ...this.state.values,\n                [e.target.name]: e.target.value\n            }\n        } );\n\n    render() {\n        return (\n            <form onSubmit={ this.submitForm } className=\"newsletter-form top-no-space\">\n                <div className=\"input-group\">\n                    <input name=\"email\"\n                           value={ this.state.values.email }\n                           onChange={ this.handleInputChange }\n                           id=\"cf-2-email\"\n                           type=\"email\"\n                           placeholder=\"Your email address\"\n                           required=\"required\" />\n\n                    <div className=\"input-group-append\">\n                        <button type=\"submit\" className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space text-uppercase\">Subscribe</button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default SubscribeForm;\n","import React, { Component } from 'react';\nimport Swiper from 'swiper';\n\nclass AboutReviews extends Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            name: \"Tommy Henders\",\n            position: \"CEO at Company\",\n        }\n    }\n\n    componentDidMount() {\n        var swiper_adv_reviews_thumbs = new Swiper( '.adv-slider-reviews .adv-swiper-container.reviews-thumbs', {\n            // ADV swiper\n            noSwipingClass: 'adv-swiper-no-swiping',\n            containerModifierClass: 'adv-swiper-container-',\n            slideClass: 'adv-swiper-slide',\n            slideBlankClass: 'adv-swiper-slide-invisible-blank',\n            slideActiveClass: 'adv-swiper-slide-active',\n            slideDuplicateActiveClass: 'adv-swiper-slide-duplicate-active',\n            slideVisibleClass: 'adv-swiper-slide-visible',\n            slideDuplicateClass: 'adv-swiper-slide-duplicate',\n            slideNextClass: 'adv-swiper-slide-next',\n            slideDuplicateNextClass: 'adv-swiper-slide-duplicate-next',\n            slidePrevClass: 'adv-swiper-slide-prev',\n            slideDuplicatePrevClass: 'adv-swiper-slide-duplicate-prev',\n            wrapperClass: 'adv-swiper-wrapper',\n            slidesPerView: 3,\n            spaceBetween: 0,\n            loop: false,\n            freeMode: false\n        } );\n\n        new Swiper( '.adv-slider-reviews .adv-swiper-container.reviews-text', {\n            // ADV swiper\n            noSwipingClass: 'adv-swiper-no-swiping',\n            containerModifierClass: 'adv-swiper-container-',\n            slideClass: 'adv-swiper-slide',\n            slideBlankClass: 'adv-swiper-slide-invisible-blank',\n            slideActiveClass: 'adv-swiper-slide-active',\n            slideDuplicateActiveClass: 'adv-swiper-slide-duplicate-active',\n            slideVisibleClass: 'adv-swiper-slide-visible',\n            slideDuplicateClass: 'adv-swiper-slide-duplicate',\n            slideNextClass: 'adv-swiper-slide-next',\n            slideDuplicateNextClass: 'adv-swiper-slide-duplicate-next',\n            slidePrevClass: 'adv-swiper-slide-prev',\n            slideDuplicatePrevClass: 'adv-swiper-slide-duplicate-prev',\n            wrapperClass: 'adv-swiper-wrapper',\n            thumbs: {\n                slideThumbActiveClass: 'adv-swiper-slide-thumb-active',\n                thumbsContainerClass: 'adv-swiper-container-thumbs',\n                swiper: swiper_adv_reviews_thumbs\n            },\n            spaceBetween: 0,\n            allowTouchMove: false\n        } );\n    }\n\n    handleClick( e ) {\n        this.setState( { \"name\": e.currentTarget.getAttribute( 'data-reviews-name' ) } );\n        this.setState( { \"position\": e.currentTarget.getAttribute( 'data-reviews-position' ) } );\n        return false\n    }\n\n    render() {\n        return (\n            <div id=\"testimonials\" className=\"block spacer p-top-xl\">\n                <div className=\"title\">\n                    <h2 className=\"hr text-uppercase\">Testimonials</h2>\n                </div>\n\n                <div className=\"adv-slider-reviews\">\n                    <div className=\"adv-slider-reviews-img\">\n                        <img src=\"assets/img/demo/32_img.png\" alt=\"Icon\" />\n                    </div>\n\n                    <div className=\"adv-swiper-container reviews-text\">\n                        <div className=\"adv-swiper-wrapper reviews-text-items\">\n                            <div className=\"adv-swiper-slide reviews-text-item\">\n                                <div className=\"reviews-text-item-content\">\n                                    <h3>But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account.</h3>\n                                </div>\n                            </div>\n\n                            <div className=\"adv-swiper-slide reviews-text-item\">\n                                <div className=\"reviews-text-item-content\">\n                                    <h3>But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account.</h3>\n                                </div>\n                            </div>\n\n                            <div className=\"adv-swiper-slide reviews-text-item\">\n                                <div className=\"reviews-text-item-content\">\n                                    <h3>But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account.</h3>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"d-flex align-items-center thumbs\">\n                        <div className=\"adv-swiper-container reviews-thumbs\">\n                            <div className=\"adv-swiper-wrapper reviews-thumbs-items\">\n                                <div onClick={ ( e ) => this.handleClick( e ) } className=\"adv-swiper-slide reviews-thumbs-item\" data-reviews-name=\"Tommy Henders\" data-reviews-position=\"CEO at Company\">\n                                    <img src=\"assets/img/placeholder/60x60.jpg\" alt=\"Tommy Henders\" />\n                                </div>\n\n                                <div onClick={ ( e ) => this.handleClick( e ) } className=\"adv-swiper-slide reviews-thumbs-item\" data-reviews-name=\"Arthur Hopin\" data-reviews-position=\"CEO at Company\">\n                                    <img src=\"assets/img/placeholder/60x60.jpg\" alt=\"Arthur Hopin\" />\n                                </div>\n\n                                <div onClick={ ( e ) => this.handleClick( e ) } className=\"adv-swiper-slide reviews-thumbs-item\" data-reviews-name=\"Rosie Ford\" data-reviews-position=\"CEO at Company\">\n                                    <img src=\"assets/img/placeholder/60x60.jpg\" alt=\"Rosie Ford\" />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"reviews-results\">\n                            <h6 className=\"reviews-name\" id=\"reviews-name\">{ this.state.name }</h6>\n                            <p className=\"reviews-positions\" id=\"reviews-positions\">{ this.state.position }</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AboutReviews;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CommentForm extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            values: {\n                comment: '',\n                author: '',\n                email: '',\n                url: ''\n            },\n            successMessage: \"Sender's message was sent successfully\",\n            warningMessage: 'Fill up the form, please!',\n            errorMessage: 'Something go wrong. Try again later!',\n            alertClass: '',\n            responseMessage: '',\n            alertTimeout: '',\n            delay: 5000\n        };\n    }\n\n    submitForm = async e => {\n        e.preventDefault();\n\n        if ( document.querySelector( '#alert' ) ) {\n            document.querySelector( '#alert' ).remove();\n        }\n\n        this.setState( { isSubmitting: true } );\n\n        axios.post( 'https://store.adveits.com/API/form.php', this.state.values, {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type': 'application/json; charset=UTF-8'\n            },\n        }, ).then( response => {\n            if ( response.data.status === 'success' ) {\n                this.setState( { responseMessage: this.state.successMessage } );\n            }\n\n            if ( response.data.status === 'warning' ) {\n                this.setState( { responseMessage: this.state.warningMessage } );\n            }\n\n            if ( response.data.status === 'error' ) {\n                this.setState( { responseMessage: this.state.errorMessage } );\n            }\n\n            this.callAlert( this.state.responseMessage, response.data.status )\n        } ).catch( error => {\n            this.callAlert( this.state.errorMessage, 'error' )\n        } );\n\n    };\n\n    removeAlert = () => {\n        clearTimeout( this.state.alertTimeout );\n\n        this.setState( {\n            alertTimeout: setTimeout( function () {\n                    var element = document.querySelector( '#alert' );\n                    element.classList.remove( 'fadeIn' );\n                    element.classList.add( 'fadeOut' );\n\n                    setTimeout( function () {\n                        element.remove()\n                    }, 900 )\n                }, this.state.delay\n            )\n        } );\n    };\n\n    callAlert = ( message, type ) => {\n        if ( !document.querySelector( '#alert' ) ) {\n            if ( type === 'success' ) {\n                this.setState( { alertClass: 'success' } )\n            }\n\n            if ( type === 'error' ) {\n                this.setState( { alertClass: 'danger' } )\n            }\n\n            if ( type === 'warning' ) {\n                this.setState( { alertClass: 'warning' } )\n            }\n\n            var alert = '<div id=\"alert\" class=\"animated fadeIn alert alert--shadow alert-' + this.state.alertClass + '\">' + message + '</div>';\n\n            var element = document.querySelector( '#commentform' );\n\n            element.insertAdjacentHTML( 'beforeend', alert );\n\n            this.removeAlert();\n        }\n    };\n\n    handleInputChange = e =>\n        this.setState( {\n            values: {\n                ...this.state.values,\n                [e.target.name]: e.target.value\n            }\n        } );\n\n    render() {\n        return (\n            <form onSubmit={ this.submitForm } id=\"commentform\" className=\"comment-form\">\n                <div className=\"form-group form-group-lg\">\n                    <p className=\"comment-notes\">Your email address will not be published. Required fields are marked <span className=\"required\">*</span></p>\n                </div>\n\n                <div className=\"form-group form-group-lg\">\n                    <label className=\"form-label-lg before after mb-0\" htmlFor=\"comment\">Comment</label>\n\n                    <textarea id=\"comment\"\n                              name=\"comment\"\n                              value={ this.state.values.comment }\n                              onChange={ this.handleInputChange }\n                              cols=\"45\"\n                              rows=\"4\"\n                              placeholder=\"Your comment here *\"\n                              required=\"required\"></textarea>\n                </div>\n\n                <div className=\"form-group form-group-lg\">\n                    <label className=\"form-label-lg before after mb-0\" htmlFor=\"comment-author\">Name</label>\n\n                    <input id=\"comment-author\"\n                           name=\"author\"\n                           value={ this.state.values.author }\n                           onChange={ this.handleInputChange }\n                           type=\"text\" placeholder=\"Your name here *\"\n                           required=\"required\" />\n                </div>\n\n                <div className=\"form-group form-group-lg\">\n                    <label className=\"form-label-lg before after mb-0\" htmlFor=\"comment-email\">Email</label>\n\n                    <input id=\"comment-email\"\n                           name=\"email\"\n                           value={ this.state.values.email }\n                           onChange={ this.handleInputChange }\n                           type=\"email\"\n                           placeholder=\"Your email here *\"\n                           required=\"required\" />\n                </div>\n\n                <div className=\"form-group form-group-lg\">\n                    <label className=\"form-label-lg before after mb-0\" htmlFor=\"comment-url\">Website</label>\n\n                    <input id=\"comment-url\"\n                           name=\"url\"\n                           value={ this.state.values.url }\n                           onChange={ this.handleInputChange }\n                           placeholder=\"Your website here\"\n                           type=\"url\" />\n                </div>\n\n                <div className=\"form-group form-group-lg\">\n                    <p className=\"comment-form-cookies-consent custom-control custom-checkbox before\">\n                        <input id=\"wp-comment-cookies-consent\" className=\"custom-control-input\" name=\"wp-comment-cookies-consent\" type=\"checkbox\" value=\"yes\" />\n\n                        <label className=\"custom-control-label\" htmlFor=\"wp-comment-cookies-consent\">Save my name, email, and website in this browser for the next time I comment.</label>\n                    </p>\n                </div>\n\n                <div className=\"form-submit\">\n                    <input name=\"Post Comment\" type=\"Post Comment\" className=\"btn btn-outline-secondary text-uppercase\" defaultValue=\"Post Comment\" />\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default CommentForm;\n","import React, { Component, Fragment } from 'react';\nimport SwipeBox from 'fslightbox-react';\n\nclass SwipeBoxComponent extends Component {\n    state = {\n        isVisible: false,\n        slide: 0,\n    };\n    showSlide = ( slide, event ) => {\n        event.preventDefault();\n        this.setState( {\n            isVisible: !this.state.isVisible,\n            slide: slide\n        } );\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <SwipeBox\n                    toggler={ this.state.isVisible }\n                    slide={ this.state.slide }\n                    urls={ [\n                        'assets/img/placeholder/780x500.jpg',\n                        'assets/img/placeholder/780x500.jpg',\n                        'assets/img/placeholder/780x500.jpg',\n                        'assets/img/placeholder/780x500.jpg',\n                        'assets/img/placeholder/780x500.jpg',\n                        'assets/img/placeholder/780x500.jpg'\n                    ] }\n                />\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 1, event ) } title=\"Face & Body | Image 1\" ref={ this.swipeImg } className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Face & Body\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 2, event ) } title=\"Hair Treatments | Image 2\" className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Hair Treatments\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 3, event ) } title=\"Hands & Feets | Image 3\" className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Hands & Feets\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 4, event ) } title=\"Haircuts for Men | Image 4\" className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Haircuts for Men\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 5, event ) } title=\"Hair | Image 5\" className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Hair\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n\n                <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6\">\n                    <a onClick={ ( event ) => this.showSlide( 6, event ) } title=\"Manicure | Image 6\" className=\"gallery-item swipebox\" href=\"assets/img/placeholder/780x500.jpg\" rel=\"gallery\">\n                        <div className=\"img object-fit\">\n                            <div className=\"object-fit-cover\">\n                                <img src=\"assets/img/placeholder/780x500.jpg\" alt=\"Manicure\" />\n                            </div>\n                        </div>\n\n                        <div className=\"img-bg-color\"></div>\n                    </a>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default SwipeBoxComponent;\n","import React from 'react';\n\nconst PageTitle404 = () => {\n    return (\n        <div id=\"page-title\">\n            <div className=\"wrapper text-center\">\n                <h1 className=\"large text-uppercase\">404</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default PageTitle404;\n","import React, { Component } from 'react';\nimport SwipeBox from './SwipeBox';\n\nclass GalleryContent extends Component {\n    constructor( props ) {\n        super( props );\n        this.swipeImg = React.createRef();\n    }\n\n    componentDidMount() {}\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"content\">\n                    <div className=\"clearfix\">\n                        <div className=\"row gutter-width-sm with-pb-sm gallery-items\">\n                            <SwipeBox />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default GalleryContent;\n","import React from 'react';\n\nconst BackToHome = () => {\n    return (\n        <div className=\"button\">\n            <a title=\"Back to homepage\" className=\"btn btn-lg btn-before-dot btn-link border-0 p-0 min-w-auto link-no-space text-uppercase\" href={ process.env.PUBLIC_URL + \"/\" }>Back to Home</a>\n        </div>\n    );\n};\n\nexport default BackToHome;\n","import React, { Fragment } from 'react';\nimport MetaTags from 'react-meta-tags';\n\nimport Loading from '../blocks/loading/Loading';\nimport Header from '../blocks/header/Header';\nimport Footer from '../blocks/footer/Footer';\n\nimport PageTitle404 from '../blocks/page-title/PageTitle404';\nimport BackToHome from '../components/button/BackToHome';\nimport SearchForm from '../components/form/SearchForm';\n\nconst page404 = () => {\n    document.body.classList.add( 'error404' );\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <title>404 | Chop - Barber Shop React JS Template</title>\n\n                <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                <meta name=\"description\" content=\"\" />\n                <meta name=\"keywords\" content=\"\" />\n                <meta name=\"robots\" content=\"index, follow, noodp\" />\n                <meta name=\"googlebot\" content=\"index, follow\" />\n                <meta name=\"google\" content=\"notranslate\" />\n                <meta name=\"format-detection\" content=\"telephone=no\" />\n            </MetaTags>\n\n            <Loading />\n\n            <Header logoColor=\"dark\" />\n\n            <main id=\"main\" className=\"site-main\">\n                <PageTitle404 />\n\n                <div id=\"page-content\" className=\"spacer p-top-lg\">\n                    <div className=\"wrapper\">\n                        <div className=\"content\">\n                            <p className=\"text after\">The page you were looking for couldn't be found. The page could be removed or you misspelled the word while searching for it. Maybe try a search?</p>\n\n                            <div className=\"form\">\n                                <SearchForm />\n                            </div>\n\n                            <BackToHome />\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n            <Footer />\n        </Fragment>\n    );\n};\n\nexport default page404;\n","import React from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\nimport 'prismjs/components/prism-scss';\n\nexport class PrismCode extends React.Component {\n    constructor( props ) {\n        super( props )\n        this.ref = React.createRef()\n    }\n\n    componentDidMount() {\n        this.highlight()\n    }\n\n    componentDidUpdate() {\n        this.highlight()\n    }\n\n    highlight = () => {\n        if ( this.ref && this.ref.current ) {\n            Prism.highlightElement( this.ref.current )\n        }\n    }\n\n    render() {\n        const { code, plugins, language } = this.props;\n        return (\n            <figure className=\"highlight\">\n                <pre className={ !plugins ? \"\" : plugins.join( \" \" ) }>\n                    <code ref={ this.ref } className={ `language-${ language }` }>\n                        { code.trim() }\n                    </code>\n                </pre>\n            </figure>\n        )\n    }\n}\n","import React from 'react';\n\nconst MoreExamples = ( { actionLink, actionLinkContent, contentAfter, contentBefore } ) => {\n    return (\n        <div className=\"bd-callout bd-callout-warning\">\n            <h5>More examples</h5>\n\n            <p>{ contentBefore }<a href={ actionLink } target=\"_blank\" rel=\"noopener noreferrer\">{ actionLinkContent }</a>{ contentAfter }</p>\n        </div>\n    );\n};\n\nexport default MoreExamples;\n","import React, { Component } from 'react';\nimport Swiper from 'swiper';\nimport MoreExamples from '../../blocks/MoreExamples';\nimport { PrismCode } from '../../../../components/prsimjs/Prismjs';\n\nclass Slider extends Component {\n\n    componentDidMount() {\n\n        new Swiper( '#slides-only .swiper-container', {\n            // ADV swiper\n            noSwipingClass: 'swiper-no-swiping',\n            containerModifierClass: 'swiper-container-',\n            slideClass: 'swiper-slide',\n            slideBlankClass: 'swiper-slide-invisible-blank',\n            slideActiveClass: 'swiper-slide-active',\n            slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'adv-swiper-slide-next',\n            slideDuplicateNextClass: 'adv-swiper-slide-duplicate-next',\n            slidePrevClass: 'adv-swiper-slide-prev',\n            slideDuplicatePrevClass: 'adv-swiper-slide-duplicate-prev',\n            wrapperClass: 'swiper-wrapper',\n            slidesPerView: 1,\n            spaceBetween: 0,\n            loop: false,\n            freeMode: false\n        } );\n        new Swiper( '#with-controls .swiper-container', {\n            // ADV swiper\n            noSwipingClass: 'swiper-no-swiping',\n            containerModifierClass: 'swiper-container-',\n            slideClass: 'swiper-slide',\n            slideBlankClass: 'swiper-slide-invisible-blank',\n            slideActiveClass: 'swiper-slide-active',\n            slideDuplicateActiveClass: '-slide-duplicate-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'swiper-slide-next',\n            slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n            slidePrevClass: 'swiper-slide-prev',\n            slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n            wrapperClass: 'swiper-wrapper',\n            slidesPerView: 1,\n            spaceBetween: 0,\n            loop: false,\n            freeMode: false,\n            navigation: {\n                nextEl: '.adv-swiper-button-next',\n                prevEl: '.adv-swiper-button-prev'\n            }\n        } );\n    }\n\n    render() {\n        return (\n            <div id=\"slider\" className=\"spacer m-top-xl\">\n                <h3>Slider</h3>\n                <p>A slideshow component for cycling through elements—images or slides of text—like a carousel.</p>\n\n                <div id=\"slider-examples\">\n                    <h4>Examples</h4>\n\n                    <div id=\"slides-only\">\n                        <h5>Slides only</h5>\n                        <p>Here’s a carousel with slides only.</p>\n\n                        <div className=\"bd-example\">\n                            <div className=\"slider\">\n                                <div className=\"swiper-container\">\n                                    <div className=\"swiper-wrapper\">\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>First slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">First slide</text>\n                                            </svg>\n                                        </div>\n\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>Second slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">Second slide</text>\n                                            </svg>\n                                        </div>\n\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>Third slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">Third slide</text>\n                                            </svg>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <PrismCode\n                            code={ '' +\n                            '<div className=\"slider\">\\n' +\n                            '  <div className=\"swiper-container\">\\n' +\n                            '    <div className=\"swiper-wrapper\">\\n' +\n                            '      <div className=\"swiper-slide\">First slide</div>\\n' +\n                            '      <div className=\"swiper-slide\">Second slide</div>\\n' +\n                            '      <div className=\"swiper-slide\">Third slide</div>\\n' +\n                            '    </div>\\n' +\n                            '  </div>\\n' +\n                            '</div>'\n                            }\n                            language=\"html\"\n                            plugins={ [\"line-numbers\"] }\n                        />\n                    </div>\n\n                    <div id=\"with-controls\">\n                        <h5>With controls</h5>\n                        <p>Adding in the previous and next controls.</p>\n\n                        <div className=\"bd-example\">\n                            <div className=\"slider\">\n                                <div className=\"swiper-container\">\n                                    <div className=\"swiper-wrapper\">\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>First slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">First slide</text>\n                                            </svg>\n                                        </div>\n\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>Second slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">Second slide</text>\n                                            </svg>\n                                        </div>\n\n                                        <div className=\"swiper-slide\">\n                                            <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"800\" height=\"400\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\n                                                <title>Third slide</title>\n                                                <rect width=\"100%\" height=\"100%\"></rect>\n                                                <text x=\"50%\" y=\"50%\" dy=\".3em\">Third slide</text>\n                                            </svg>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"adv-swiper-button-next\"></div>\n                                    <div className=\"adv-swiper-button-prev\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <PrismCode\n                            code={ '<div className=\"slider\">\\n' +\n                            '  <div className=\"swiper-container\">\\n' +\n                            '    <div className=\"swiper-wrapper\">\\n' +\n                            '      <div className=\"swiper-slide\">First slide</div>\\n' +\n                            '      <div className=\"swiper-slide\">Second slide</div>\\n' +\n                            '      <div className=\"swiper-slide\">Third slide</div>\\n' +\n                            '    </div>\\n' +\n                            '  </div>\\n' +\n                            '  <div className=\"adv-swiper-button-next\"></div>\\n' +\n                            '  <div className=\"adv-swiper-button-prev\"></div>\\n' +\n                            '</div>'\n                            }\n                            language=\"html\"\n                            plugins={ [\"line-numbers\"] }\n                        />\n                    </div>\n                </div>\n\n                <MoreExamples actionLink=\"https://swiperjs.com/demos/\"\n                              actionLinkContent=\"Swiper documentation\"\n                              contentBefore=\"For more examples and demo data, click \"\n                              contentAfter=\".\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Slider;\n","import React, { Component } from 'react'\nimport { Dropdown, Fade } from 'react-bootstrap';\n\nclass DropdownHover extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            show: false\n        }\n    };\n\n    render() {\n        return (\n            <Dropdown show={ this.state.show } onMouseLeave={ ( e ) => this.setState( { show: false } ) }>\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-hover\" onMouseEnter={ ( e ) => this.setState( { show: true } ) }>\n                    Hover\n                </Dropdown.Toggle>\n\n                <Fade in={ this.state.show }>\n                    <Dropdown.Menu onMouseLeave={ ( e ) => this.setState( { show: false } ) }>\n                        <Dropdown.Item href=\"#dropdowns-open-variations/action\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#dropdowns-open-variations/action\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#dropdowns-open-variations/action\">Something else</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Fade>\n            </Dropdown>\n        );\n    };\n}\n\nexport default DropdownHover;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Dropdown } from 'react-bootstrap';\nimport DropdownHover from './DropdownHover';\n\nconst OpenVariations = () => {\n\n    return (\n        <div id=\"dropdowns-open-variations\">\n            <h4>Open variations</h4>\n\n            <div className=\"bd-example\">\n\n                <div className=\"btn-group mr-1\" id=\"dropdown-click\">\n                    <Dropdown>\n                        <Dropdown.Toggle className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuButton-1\">\n                            Click default\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu renderOnMount>\n                            <Dropdown.Item href=\"#dropdowns-open-variations/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdowns-open-variations/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdowns-open-variations/action\">Something else</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"btn-group mr-1\">\n                    <DropdownHover />\n                </div>\n            </div>\n\n            <PrismCode\n                code={ '<div className=\"btn-group\">\\n' +\n                '  <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton-1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Click default</button>\\n' +\n                '\\n' +\n                '  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-1\">\\n' +\n                '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                '  </div>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default OpenVariations;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Dropdown, DropdownButton, SplitButton, ButtonGroup } from \"react-bootstrap\";\n\nconst DropdownExamples = () => {\n    return (\n        <div id=\"dropdowns-examples\" className=\"spacer m-top-lg\">\n            <h4>Default examples</h4>\n            <p>Wrap the dropdown’s toggle (your button or link) and the dropdown menu within <code>.dropdown</code>, or another element that declares <code>position: relative;</code>. Dropdowns can be triggered from <code>&lt;a&gt;</code> or <code>&lt;button&gt;</code> elements to better fit your potential needs.</p>\n\n            <div id=\"single-button\">\n                <h5>Single button</h5>\n                <p>Any single <code>.btn</code> can be turned into a dropdown toggle with some markup changes. Here’s how you can put them to work with either <code>&lt;button&gt;</code> elements:</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown>\n                        <Dropdown.Toggle className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuButton\">\n                            Dropdown button\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#dropdowns-examples/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdowns-examples/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdowns-examples/action\">Something else</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"dropdown\">\\n' +\n                    '  <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown button</button>\\n' +\n                    '\\n' +\n                    '  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <p>And with <code>&lt;a&gt;</code> elements:</p>\n\n                <p>The best part is you can do this with any button variant, too:</p>\n\n                <div className=\"bd-example\">\n                    { ['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n                        ( variant ) => (\n                            <DropdownButton\n                                as={ ButtonGroup }\n                                key={ variant }\n                                id={ `dropdown-split-variants-${ variant }` }\n                                variant={ variant.toLowerCase() }\n                                title={ variant }\n                                className=\"\"\n                            >\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"1\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"3\" active>\n                                    Active Item\n                                </Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                            </DropdownButton>\n                        ),\n                    ) }\n                </div>\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Primary</button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"split-button\">\n                <h5>Split button</h5>\n                <p>Similarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of <code>.dropdown-toggle-split</code> for proper spacing around the dropdown caret.</p>\n                <p>We use this extra class to reduce the horizontal <code>padding</code> on either side of the caret by 25% and remove the <code>margin-left</code> that’s added for regular button dropdowns. Those extra changes keep the caret centered in the split button and provide a more appropriately sized hit area next to the main button.</p>\n\n                <div className=\"bd-example\">\n                    { ['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map(\n                        ( variant ) => (\n                            <SplitButton\n                                key={ variant }\n                                id={ `dropdown-split-variants-${ variant }` }\n                                variant={ variant.toLowerCase() }\n                                title={ variant }\n                                className=\"\"\n                            >\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"1\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"3\" active>\n                                    Active Item\n                                </Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                            </SplitButton>\n                        ),\n                    ) }\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-danger\">Danger</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                    '    <span className=\"sr-only\">Toggle Dropdown</span>\\n' +\n                    '  </button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"dropdowns-button-sizing\">\n                <h5>Sizing</h5>\n                <p>Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.</p>\n\n                <div className=\"bd-example\">\n                    <div className=\"btn-toolbar\" role=\"toolbar\">\n                        { [DropdownButton, SplitButton].map( ( DropdownType, idx ) => (\n                            <DropdownType\n                                as={ ButtonGroup }\n                                key={ idx }\n                                id={ `dropdown-button-drop-${ idx }` }\n                                size=\"lg\"\n                                title=\"Drop large\"\n                                className=\"\"\n                            >\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"1\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                            </DropdownType>\n                        ) ) }\n\n                    </div>\n                    <div className=\"btn-toolbar\" role=\"toolbar\">\n                        { [DropdownButton, SplitButton].map( ( DropdownType, idx ) => (\n                            <DropdownType\n                                as={ ButtonGroup }\n                                key={ idx }\n                                id={ `dropdown-button-drop-${ idx }` }\n                                size=\"sm\"\n                                title=\"Drop small\"\n                                className=\"\"\n                            >\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"1\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item href=\"#dropdowns-examples/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                            </DropdownType>\n                        ) ) }\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group ml-2\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-sm btn-primary\">Small split button</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                    '    <span className=\"sr-only\">Toggle Dropdown</span>\\n' +\n                    '  </button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default DropdownExamples;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Dropdown, DropdownButton, ButtonGroup, SplitButton } from 'react-bootstrap';\n\nconst Directions = () => {\n    return (\n        <div id=\"directions\">\n            <h4>Directions</h4>\n\n            <div id=\"dropup\">\n                <h5>Dropup</h5>\n                <p>Trigger dropdown menus above elements by adding <code>.dropup</code> to the parent element.</p>\n\n                <div className=\"bd-example\">\n                    { ['up'].map( ( direction ) => (\n                        <DropdownButton\n                            as={ ButtonGroup }\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ ` Drop ${ direction } ` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </DropdownButton>\n                    ) ) }\n\n                    { ['up'].map( ( direction ) => (\n                        <SplitButton\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ `Drop ${ direction }` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </SplitButton>\n                    ) ) }\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group dropup\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropup</button>\\n' +\n                    '  <div className=\"dropdown-menu\" >\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"btn-group dropup\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\">Split dropup</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                    '    <span className=\"sr-only\">Toggle Dropdown</span>\\n' +\n                    '  </button>\\n' +\n                    '  <div className=\"dropdown-menu\" >\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"dropright\">\n                <h5>Dropright</h5>\n                <p>Trigger dropdown menus at the right of the elements by adding <code>.dropright</code> to the parent element.</p>\n\n                <div className=\"bd-example\">\n                    { ['right'].map( ( direction ) => (\n                        <DropdownButton\n                            as={ ButtonGroup }\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ ` Drop ${ direction } ` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </DropdownButton>\n                    ) ) }\n\n                    { ['right'].map( ( direction ) => (\n                        <SplitButton\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ `Drop ${ direction }` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </SplitButton>\n                    ) ) }\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group dropright\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropright</button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"btn-group dropright\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\">Split dropright</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                    '    <span className=\"sr-only\">Toggle Dropright</span>\\n' +\n                    '  </button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"dropleft\">\n                <h5>Dropleft</h5>\n                <p>Trigger dropdown menus at the left of the elements by adding <code>.dropleft</code> to the parent element.</p>\n\n                <div className=\"bd-example\">\n                    { ['left'].map( ( direction ) => (\n                        <DropdownButton\n                            as={ ButtonGroup }\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ ` Drop ${ direction } ` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\"  eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </DropdownButton>\n                    ) ) }\n\n                    { ['left'].map( ( direction ) => (\n                        <SplitButton\n                            key={ direction }\n                            id={ `dropdown-button-drop-${ direction }` }\n                            drop={ direction }\n                            title={ `Drop ${ direction }` }\n                            className=\"\"\n                        >\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#directions/action\" eventKey=\"4\">Separated link</Dropdown.Item>\n                        </SplitButton>\n                    ) ) }\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group dropleft\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropright</button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"btn-group dropright\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\">Split dropright</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                    '    <span className=\"sr-only\">Toggle Dropright</span>\\n' +\n                    '  </button>\\n' +\n                    '  <div className=\"dropdown-menu\">\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '    <div className=\"dropdown-divider\"></div>\\n' +\n                    '    <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Directions;\n","import React from 'react';\nimport { PrismCode } from \"../../../../../components/prsimjs/Prismjs\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst MenuItems = () => {\n    return (\n        <div id=\"menu-items\">\n            <h4>Menu items</h4>\n            <p>Historically dropdown menu contents <em>had</em> to be links, but that’s no longer the case with v4. Now you can optionally use <code>&lt;button&gt;</code> elements in your dropdowns instead of just <code>&lt;a&gt;</code>s.</p>\n\n            <div className=\"bd-example\">\n                <Dropdown>\n                    <Dropdown.Toggle className=\"btn btn-primary\" id=\"dropdownMenu2\">\n                        Dropdown\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item href=\"#menu-items/action\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#menu-items/action\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#menu-items/action\">Something else</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"dropdown\">\\n' +\n                '  <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</button>\\n' +\n                '  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\" >\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Action</button>\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Another action</button>\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Something else here</button>\\n' +\n                '  </div>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <p>You can also create non-interactive dropdown items with <code>.dropdown-item-text</code>. Feel free to style further with custom CSS or text utilities.</p>\n\n            <div className=\"bd-example\">\n                <Dropdown className=\"dropdown-menu\" show>\n                    <span className=\"dropdown-item-text\">Dropdown item text</span>\n                    <Dropdown.Item href=\"#menu-items/action\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-items/action\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-items/action\">Something else</Dropdown.Item>\n                </Dropdown>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"dropdown-menu\">\\n' +\n                '  <span className=\"dropdown-item-text\">Dropdown item text</span>\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <h5>Active</h5>\n            <p>Add <code>.active</code> to items in the dropdown to <strong>style them as active</strong>.</p>\n\n            <div className=\"bd-example\">\n                <Dropdown className=\"dropdown-menu\" show>\n                    <Dropdown.Item href=\"#menu-items/action\">Regular link</Dropdown.Item>\n                    <Dropdown.Item className=\"active\" href=\"#menu-items/action\">Active link</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-items/action\">Another link</Dropdown.Item>\n                </Dropdown>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"dropdown-menu\">\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Regular link</a>\\n' +\n                '  <a className=\"dropdown-item active\" href=\"#\">Active link</a>\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Another link</a>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <h5>Disabled</h5>\n            <p>Add <code>.disabled</code> to items in the dropdown to <strong>style them as disabled</strong>.</p>\n\n            <div className=\"bd-example\">\n                <Dropdown className=\"dropdown-menu\" show>\n                    <Dropdown.Item href=\"#menu-items/action\">Regular link</Dropdown.Item>\n                    <Dropdown.Item className=\"disabled\" href=\"#menu-items/action\">Disabled link</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-items/action\">Another link</Dropdown.Item>\n                </Dropdown>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"dropdown-menu\">\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Regular link</a>\\n' +\n                '  <a className=\"dropdown-item disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled link</a>\\n' +\n                '  <a className=\"dropdown-item\" href=\"#\">Another link</a>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default MenuItems;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { DropdownButton, Dropdown, ButtonGroup } from 'react-bootstrap';\n\nconst MenuAlignment = () => {\n    return (\n        <div id=\"menu-alignment\">\n            <h4>Menu alignment</h4>\n            <p>By default, a dropdown menu is automatically positioned 100% from the top and along the left side of its parent. Add <code>.dropdown-menu-right</code> to a <code>.dropdown-menu</code> to right align the dropdown menu.</p>\n\n            <div className=\"bd-example\">\n                <DropdownButton\n                    alignRight\n                    as={ ButtonGroup }\n                    title=\"Right-aligned menu\"\n                    id=\"dropdown-menu-align-right\"\n                    variant=\"primary\"\n                >\n                    <Dropdown.Item href=\"#menu-alignment/action\" eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-alignment/action\" eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#menu-alignment/action\" eventKey=\"3\">Something else here</Dropdown.Item>\n                </DropdownButton>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"btn-group\">\\n' +\n                '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Right-aligned menu</button>\\n' +\n                '  <div className=\"dropdown-menu dropdown-menu-right\" >\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Action</button>\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Another action</button>\\n' +\n                '    <button className=\"dropdown-item\" type=\"button\">Something else here</button>\\n' +\n                '  </div>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <div id=\"responsive-alignment\">\n                <h5>Responsive alignment</h5>\n                <p>If you want to use responsive alignment, disable dynamic positioning by adding the <code>data-display=\"static\"</code> attribute and use the responsive variation classes.</p>\n                <p>To align <strong>right</strong> the dropdown menu with the given breakpoint or larger, add <code>.dropdown-menu{ '-sm' | '-md' | '-lg' | '-xl' }-right</code>.</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown as={ ButtonGroup }>\n                        <Dropdown.Toggle\n                            data-display=\"static\"\n                            className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuButton-1\">\n                            Left-aligned but right aligned when large screen\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu className=\"dropdown-menu-lg-right\">\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Something else</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" data-display=\"static\" aria-haspopup=\"true\" aria-expanded=\"false\">Left-aligned but right aligned when large screen</button>\\n' +\n                    '  <div className=\"dropdown-menu dropdown-menu-lg-right\">\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Action</button>\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Another action</button>\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Something else here</button>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <p>To align <strong>left</strong> the dropdown menu with the given breakpoint or larger, add <code>.dropdown-menu-right</code> and <code>.dropdown-menu{ '-sm' | '-md' | '-lg' | '-xl' }-left</code>.</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown as={ ButtonGroup }>\n                        <Dropdown.Toggle\n                            data-display=\"static\"\n                            className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuButton-2\">\n                            Right-aligned but left aligned when large screen\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right dropdown-menu-lg-left\">\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#responsive-alignment/action\">Something else</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"btn-group\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" data-display=\"static\" aria-haspopup=\"true\" aria-expanded=\"false\">Right-aligned but left aligned when large screen</button>\\n' +\n                    '  <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-lg-left\">\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Action</button>\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Another action</button>\\n' +\n                    '    <button className=\"dropdown-item\" type=\"button\">Something else here</button>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <p>Note that you don’t need to add a <code>data-display=\"static\"</code> attribute to dropdown buttons in navbars, since Popper.js isn’t used in navbars.</p>\n            </div>\n        </div>\n    );\n};\n\nexport default MenuAlignment;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-scroll';\n\nconst MenuContent = () => {\n    return (\n        <div id=\"menu-content\" className=\"spacer m-top-lg\">\n            <h4>Menu content</h4>\n\n            <div id=\"headers\">\n                <h5>Headers</h5>\n                <p>Add a header to label sections of actions in any dropdown menu.</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown className=\"dropdown-menu\" show>\n                        <h6 className=\"dropdown-header\">Dropdown header</h6>\n                        <Dropdown.Item href=\"#headers/action\" eventKey=\"2\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#headers/action\" eventKey=\"3\">Another action</Dropdown.Item>\n                    </Dropdown>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"dropdown-menu\">\\n' +\n                    '  <h6 className=\"dropdown-header\">Dropdown header</h6>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"dividers\">\n                <h5>Dividers</h5>\n                <p>Separate groups of related menu items with a divider.</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown className=\"dropdown-menu\" show>\n                        <Dropdown.Item href=\"#dividers/action\" eventKey=\"2\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#dividers/action\" eventKey=\"3\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#dividers/action\" eventKey=\"4\">Something else here</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item href=\"#dividers/action\" eventKey=\"5\">Separated link</Dropdown.Item>\n                    </Dropdown>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"dropdown-menu\">\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                    '  <div className=\"dropdown-divider\"></div>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"menu-text\">\n                <h5>Text</h5>\n                <p>Place any freeform text within a dropdown menu with text and use <Link title=\"Spacing\" className=\"scroll-to-id\" to=\"spacing\" spy={ true } smooth={ true } duration={ 0 } href=\"#spacing\">spacing utilities</Link>. Note that you’ll likely need additional sizing styles to constrain the menu width.</p>\n\n                <div className=\"bd-example\">\n                    <Dropdown className=\"dropdown-menu p-4 text-muted\" style={ { \"maxWidth\": \"200px\" } } show>\n                        <p>Some example text that's free-flowing within the dropdown menu.</p>\n                        <p className=\"mb-0\">And this is more example text.</p>\n                    </Dropdown>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"dropdown-menu p-4 text-muted\" style=\"maxWidth: 200px;\">\\n' +\n                    '  <p>\\n' +\n                    '    Some example text that\\'s free-flowing within the dropdown menu.\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"mb-0\">\\n' +\n                    '    And this is more example text.\\n' +\n                    '  </p>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"menu-forms\">\n                <h5>Forms</h5>\n                <p>Put a form within a dropdown menu, or make it into a dropdown menu, and use <Link title=\"Spacing\" className=\"scroll-to-id\" to=\"spacing\" spy={ true } smooth={ true } duration={ 0 } href=\"#spacing\">margin or padding utilities</Link> to give it the negative space you require.</p>\n\n                <div className=\"bd-example\">\n                    <div className=\"dropdown-menu\">\n                        <form className=\"px-3 py-3\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleDropdownFormEmail1\">Email address</label>\n                                <input type=\"email\" className=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@example.com\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleDropdownFormPassword1\">Password</label>\n                                <input type=\"password\" className=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck\" />\n                                    <label className=\"form-check-label\" htmlFor=\"dropdownCheck\">Remember me</label>\n                                </div>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                        </form>\n                        <div className=\"dropdown-divider\"></div>\n                        <a className=\"dropdown-item\" href=\"#menu-forms/action\">New around here? Sign up</a>\n                        <a className=\"dropdown-item\" href=\"#menu-forms/action\">Forgot password?</a>\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"dropdown-menu\">\\n' +\n                    '  <form className=\"px-3 py-3\">\\n' +\n                    '    <div className=\"form-group\">\\n' +\n                    '      <label for=\"exampleDropdownFormEmail1\">Email address</label>\\n' +\n                    '      <input type=\"email\" className=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@example.com\"/>\\n' +\n                    '    </div>\\n' +\n                    '    <div className=\"form-group\">\\n' +\n                    '      <label for=\"exampleDropdownFormPassword1\">Password</label>\\n' +\n                    '      <input type=\"password\" className=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\"/>\\n' +\n                    '    </div>\\n' +\n                    '    <div className=\"form-group\">\\n' +\n                    '      <div className=\"form-check\">\\n' +\n                    '        <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck\"/>\\n' +\n                    '        <label className=\"form-check-label\" for=\"dropdownCheck\">\\n' +\n                    '          Remember me\\n' +\n                    '        </label>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '    <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\\n' +\n                    '  </form>\\n' +\n                    '  <div className=\"dropdown-divider\"></div>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#menu-forms\">New around here? Sign up</a>\\n' +\n                    '  <a className=\"dropdown-item\" href=\"#menu-forms\">Forgot password?</a>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-example\">\n                    <form className=\"dropdown-menu p-4\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleDropdownFormEmail2\">Email address</label>\n                            <input type=\"email\" className=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleDropdownFormPassword2\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-check\">\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck2\" />\n                                <label className=\"form-check-label\" htmlFor=\"dropdownCheck2\">Remember me</label>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form className=\"dropdown-menu p-4\">\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <label for=\"exampleDropdownFormEmail2\">Email address</label>\\n' +\n                    '    <input type=\"email\" className=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\"/>\\n' +\n                    '  </div>\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <label for=\"exampleDropdownFormPassword2\">Password</label>\\n' +\n                    '    <input type=\"password\" className=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\"/>\\n' +\n                    '  </div>\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <div className=\"form-check\">\\n' +\n                    '      <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck2\"/>\\n' +\n                    '      <label className=\"form-check-label\" for=\"dropdownCheck2\">\\n' +\n                    '        Remember me\\n' +\n                    '      </label>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '  <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default MenuContent;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Dropdown, ButtonGroup, Button } from \"react-bootstrap\";\n\nconst DropdownOptions = () => {\n    return (\n        <div id=\"dropdown-options\">\n            <h4>Dropdown options</h4>\n            <p>Use <code>data-offset</code> or <code>data-reference</code> to change the location of the dropdown.</p>\n\n            <div className=\"bd-example\">\n                <div className=\"d-flex\">\n                    <Dropdown className=\"\">\n                        <Dropdown.Toggle className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuOffset\">\n                            Offset\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Something else</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ ButtonGroup }>\n                        <Button className=\"btn btn-primary\">Reference</Button>\n\n                        <Dropdown.Toggle className=\"btn btn-primary\" split id=\"dropdownMenuReference\" />\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item href=\"#dropdown-options/action\">Something else here</Dropdown.Item>\n                            <Dropdown.Item href=\"#dropdown-options/action\">Something else here</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            </div>\n\n            <PrismCode\n                code={\n                '<div className=\"d-flex\">\\n' +\n                '  <div className=\"dropdown \">\\n' +\n                '    <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" id=\"dropdownMenuOffset\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" data-offset=\"10,20\">Offset</button>\\n' +\n                '    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuOffset\">\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                '    </div>\\n' +\n                '  </div>\\n' +\n                '  <div className=\"btn-group\">\\n' +\n                '    <button type=\"button\" className=\"btn btn-primary\">Reference</button>\\n' +\n                '    <button type=\"button\" className=\"btn btn-primary dropdown-toggle dropdown-toggle-split\" id=\"dropdownMenuReference\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" data-reference=\"parent\">\\n' +\n                '      <span className=\"sr-only\">Toggle Dropdown</span>\\n' +\n                '    </button>\\n' +\n                '    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuReference\">\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Action</a>\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Another action</a>\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Something else here</a>\\n' +\n                '      <div className=\"dropdown-divider\"></div>\\n' +\n                '      <a className=\"dropdown-item\" href=\"#\">Separated link</a>\\n' +\n                '    </div>\\n' +\n                '  </div>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default DropdownOptions;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst DropdownUsage = () => {\n    return (\n        <div id=\"dropdown-usage\">\n            <h4>Usage</h4>\n            <p>Via data attributes or JavaScript, the dropdown plugin toggles hidden content (dropdown menus) by toggling the <code>.show</code> class on the parent list item. The <code>data-toggle=\"dropdown\"</code> attribute is relied on for closing dropdown menus at an application level, so it’s a good idea to always use it.</p>\n\n            <h5>Via data attributes</h5>\n            <p>Add <code>data-toggle=\"dropdown\"</code> to a link or button to toggle a dropdown.</p>\n\n            <PrismCode\n                code={\n                '<div className=\"dropdown\">\\n' +\n                '  <button id=\"dLabel\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n' +\n                '    Dropdown trigger\\n' +\n                '  </button>\\n' +\n                '  <div className=\"dropdown-menu\" aria-labelledby=\"dLabel\">\\n' +\n                '    ...\\n' +\n                '  </div>\\n' +\n                '</div>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default DropdownUsage;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst FormExamples = () => {\n    return (\n        <div id=\"form-examples\">\n            <h4>Examples</h4>\n\n            <div id=\"form-primary\">\n                <h5>Form primary</h5>\n                <p>No classes.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <p><input type=\"text\" placeholder=\"Input text\" /></p>\n\n                        <p><textarea placeholder=\"Textarea\"></textarea></p>\n\n                        <p>\n                            <select>\n                                <option>Select</option>\n                                <option>Option 1</option>\n                                <option>Option 2</option>\n                            </select>\n                        </p>\n\n                        <p className=\"form-crop-ba\">\n                            <input type=\"checkbox\" id=\"checkbox-input\" />\n                            <label htmlFor=\"checkbox-input\">Checkbox</label>\n                        </p>\n\n                        <p className=\"form-crop-ba\">\n                            <input type=\"radio\" id=\"radio-input\" />\n                            <label htmlFor=\"radio-input\">Radio</label>\n                        </p>\n\n                        <p className=\"form-check form-crop-ba\">\n                            <input type=\"checkbox\" className=\"form-check-input\" id=\"checkbox-input-2\" />\n                            <label className=\"form-label-secondary\" htmlFor=\"checkbox-input-2\">Checkbox</label>\n                        </p>\n\n                        <p className=\"form-check form-crop-ba\">\n                            <input type=\"radio\" className=\"form-check-input\" id=\"radio-input-2\" />\n                            <label className=\"form-label-secondary\" htmlFor=\"radio-input-2\">Radio</label>\n                        </p>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <p>\\n' +\n                    '    <input type=\"text\" placeholder=\"Input text\">\\n' +\n                    '  </p>\\n' +\n                    '  <p>\\n' +\n                    '    <textarea placeholder=\"Textarea\"></textarea>\\n' +\n                    '  </p>\\n' +\n                    '  <p>\\n' +\n                    '    <select>\\n' +\n                    '      <option>Select</option>\\n' +\n                    '      <option>Option 1</option>\\n' +\n                    '      <option>Option 2</option>\\n' +\n                    '    </select>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"form-crop-ba\">\\n' +\n                    '    <input type=\"checkbox\" id=\"checkbox-input\">\\n' +\n                    '    <label htmlFor=\"checkbox-input\">Checkbox</label>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"form-crop-ba\">\\n' +\n                    '    <input type=\"radio\" id=\"radio-input\">\\n' +\n                    '    <label htmlFor=\"radio-input\">Radio</label>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"form-check form-crop-ba\">\\n' +\n                    '    <input type=\"checkbox\" className=\"form-check-input\" id=\"checkbox-input-2\">\\n' +\n                    '    <label className=\"form-label-secondary\" htmlFor=\"checkbox-input-2\">Checkbox</label>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"form-check form-crop-ba\">\\n' +\n                    '    <input type=\"radio\" className=\"form-check-input\" id=\"radio-input-2\">\\n' +\n                    '    <label className=\"form-label-secondary\" htmlFor=\"radio-input-2\">Radio</label>\\n' +\n                    '  </p>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"form-secondary\">\n                <h5>Form secondary</h5>\n                <p>With classes.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <p><input type=\"text\" className=\"form-control\" placeholder=\"Input text\" /></p>\n\n                        <p><textarea className=\"form-control\" placeholder=\"Textarea\"></textarea></p>\n\n                        <p>\n                            <select className=\"form-control\">\n                                <option>Select</option>\n                                <option>Option 1</option>\n                                <option>Option 2</option>\n                            </select>\n                        </p>\n\n                        <p className=\"custom-control custom-checkbox form-crop-ba\">\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"custom-checkbox-input\" />\n                            <label htmlFor=\"custom-checkbox-input\" className=\"custom-control-label\">Checkbox</label>\n                        </p>\n\n                        <p className=\"custom-control custom-radio form-crop-ba\">\n                            <input type=\"radio\" className=\"custom-control-input\" id=\"custom-radio-input\" />\n                            <label htmlFor=\"custom-radio-input\" className=\"custom-control-label\">Radio</label>\n                        </p>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <p>\\n' +\n                    '    <input type=\"text\" className=\"form-control\" placeholder=\"Input text\">\\n' +\n                    '  </p>\\n' +\n                    '  <p>\\n' +\n                    '    <textarea className=\"form-control\" placeholder=\"Textarea\"></textarea>\\n' +\n                    '  </p>\\n' +\n                    '  <p>\\n' +\n                    '    <select className=\"form-control\">\\n' +\n                    '      <option>Select</option>\\n' +\n                    '      <option>Option 1</option>\\n' +\n                    '      <option>Option 2</option>\\n' +\n                    '    </select>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"custom-control custom-checkbox form-crop-ba\">\\n' +\n                    '    <input type=\"checkbox\" className=\"custom-control-input\" id=\"custom-checkbox-input\">\\n' +\n                    '    <label htmlFor=\"custom-checkbox-input\" className=\"custom-control-label\">Checkbox</label>\\n' +\n                    '  </p>\\n' +\n                    '  <p className=\"custom-control custom-radio form-crop-ba\">\\n' +\n                    '    <input type=\"radio\" className=\"custom-control-input\" id=\"custom-radio-input\">\\n' +\n                    '    <label htmlFor=\"custom-radio-input\" className=\"custom-control-label\">Radio</label>\\n' +\n                    '  </p>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default FormExamples;\n","import React, { Component } from 'react';\nimport MoreExamples from '../../blocks/MoreExamples';\n\nimport OpenVariations from './children/OpenVariations';\nimport DropdownExamples from './children/DropdownExamples';\nimport Directions from './children/Directions';\nimport MenuItems from './children/MenuItems';\nimport MenuAlignment from './children/MenuAlignment';\nimport MenuContent from './children/MenuContent';\nimport DropdownOptions from './children/DropdownOptions';\nimport DropdownUsage from './children/DropdownUsage';\n\nclass Dropdowns extends Component {\n    render() {\n        return (\n            <div id=\"dropdowns\" className=\"spacer m-top-xl\">\n                <h3>Dropdowns</h3>\n                <p>Toggle contextual overlays for displaying lists of links and more.</p>\n\n                <OpenVariations />\n\n                <DropdownExamples />\n\n                <Directions />\n\n                <MenuItems />\n\n                <MenuAlignment />\n\n                <MenuContent />\n\n                <DropdownOptions />\n\n                <DropdownUsage />\n\n                <MoreExamples actionLink=\"https://getbootstrap.com/docs/4.4/components/dropdowns/\"\n                              actionLinkContent=\"Bootstrap 4 documentation\"\n                              contentBefore=\"For more examples and demo data, click \"\n                              contentAfter=\".\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;\n","import React\n    from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst FormControls = () => {\n    return (\n        <div id=\"form-controls\">\n            <h4>Form controls</h4>\n            <p>Textual form controls—like <code>&lt;input&gt;</code>s, <code>&lt;select&gt;</code>s, and <code>&lt;textarea&gt;</code>s—are styled with the <code>.form-control</code> class. Included are styles for general appearance, focus state, sizing, and more.</p>\n            <p>Be sure to explore our custom forms to further style <code>&lt;select&gt;</code>s.</p>\n\n            <div className=\"bd-example\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlInput1\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlSelect1\">Example select</label>\n                        <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlSelect2\">Example multiple select</label>\n                        <select multiple=\"\" className=\"form-control\" id=\"exampleFormControlSelect2\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlTextarea1\">Example textarea</label>\n                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                    </div>\n                </form>\n            </div>\n\n            <PrismCode\n                code={\n                '<form>\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"exampleFormControlInput1\">Email address</label>\\n' +\n                '    <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\\n' +\n                '  </div>\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"exampleFormControlSelect1\">Example select</label>\\n' +\n                '    <select className=\"form-control\" id=\"exampleFormControlSelect1\">\\n' +\n                '      <option>1</option>\\n' +\n                '      <option>2</option>\\n' +\n                '      <option>3</option>\\n' +\n                '      <option>4</option>\\n' +\n                '      <option>5</option>\\n' +\n                '    </select>\\n' +\n                '  </div>\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"exampleFormControlSelect2\">Example multiple select</label>\\n' +\n                '    <select multiple=\"\" className=\"form-control\" id=\"exampleFormControlSelect2\">\\n' +\n                '      <option>1</option>\\n' +\n                '      <option>2</option>\\n' +\n                '      <option>3</option>\\n' +\n                '      <option>4</option>\\n' +\n                '      <option>5</option>\\n' +\n                '    </select>\\n' +\n                '  </div>\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"exampleFormControlTextarea1\">Example textarea</label>\\n' +\n                '    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\\n' +\n                '  </div>\\n' +\n                '</form>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <p>For file inputs, swap the <code>.form-control</code> for <code>.form-control-file</code>.</p>\n\n            <div className=\"bd-example\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlFile1\">Example file input</label>\n                        <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\" />\n                    </div>\n                </form>\n            </div>\n\n            <PrismCode\n                code={\n                '<form>\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"exampleFormControlFile1\">Example file input</label>\\n' +\n                '    <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\">\\n' +\n                '  </div>\\n' +\n                '</form>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <div id=\"form-sizing\">\n                <h5>Sizing</h5>\n                <p>Set heights using classes like <code>.form-control-lg</code> and <code>.form-control-sm</code>.</p>\n\n                <div className=\"bd-example\">\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\".form-control-lg\" />\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Default input\" />\n                    <input className=\"form-control form-control-sm\" type=\"text\" placeholder=\".form-control-sm\" />\n                </div>\n\n                <PrismCode\n                    code={\n                    '<input className=\"form-control form-control-lg\" type=\"text\" placeholder=\".form-control-lg\"/>\\n' +\n                    '<input className=\"form-control\" type=\"text\" placeholder=\"Default input\"/>\\n' +\n                    '<input className=\"form-control form-control-sm\" type=\"text\" placeholder=\".form-control-sm\"/>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-example\">\n                    <select className=\"form-control form-control-lg\">\n                        <option>Large select</option>\n                    </select>\n                    <select className=\"form-control\">\n                        <option>Default select</option>\n                    </select>\n                    <select className=\"form-control form-control-sm\">\n                        <option>Small select</option>\n                    </select>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<select className=\"form-control form-control-lg\">\\n' +\n                    '  <option>Large select</option>\\n' +\n                    '</select>\\n' +\n                    '<select className=\"form-control\">\\n' +\n                    '  <option>Default select</option>\\n' +\n                    '</select>\\n' +\n                    '<select className=\"form-control form-control-sm\">\\n' +\n                    '  <option>Small select</option>\\n' +\n                    '</select>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"readonly\">\n                <h5>Readonly</h5>\n                <p>Add the <code>readonly</code> boolean attribute on an input to prevent modification of the input’s value. Read-only inputs appear lighter (just like disabled inputs), but retain the standard cursor.</p>\n\n                <div className=\"bd-example\">\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Readonly input here...\" readOnly=\"\" />\n                </div>\n\n                <PrismCode\n                    code={\n                    '<input className=\"form-control\" type=\"text\" placeholder=\"Readonly input here...\" readOnly=\"\"/>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"readonly-plain-text\">\n                <h5>Readonly plain text</h5>\n                <p>If you want to have <code>&lt;input readonly&gt;</code> elements in your form styled as plain text, use the <code>.form-control-plaintext</code> class to remove the default form field styling and preserve the correct margin and padding.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" id=\"staticEmail\"\n                                       defaultValue=\"email@example.com\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Password</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"password\" className=\"form-control\" id=\"inputPassword\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <div className=\"form-group row\">\\n' +\n                    '    <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\\n' +\n                    '    <div className=\"col-sm-10\">\\n' +\n                    '      <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" id=\"staticEmail\" defaultValue=\"email@example.com\">\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '  <div className=\"form-group row\">\\n' +\n                    '    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Password</label>\\n' +\n                    '    <div className=\"col-sm-10\">\\n' +\n                    '      <input type=\"password\" className=\"form-control\" id=\"inputPassword\">\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-example\">\n                    <form className=\"form-inline\">\n                        <div className=\"form-group mb-2\">\n                            <label htmlFor=\"staticEmail2\" className=\"sr-only\">Email</label>\n                            <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" id=\"staticEmail2\" defaultValue=\"email@example.com\" />\n                        </div>\n                        <div className=\"form-group mx-sm-3 mb-2\">\n                            <label htmlFor=\"inputPassword2\" className=\"sr-only\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary mb-2\">Confirm identity</button>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form className=\"form-inline\">\\n' +\n                    '  <div className=\"form-group mb-2\">\\n' +\n                    '    <label htmlFor=\"staticEmail2\" className=\"sr-only\">Email</label>\\n' +\n                    '    <input type=\"text\" readOnly=\"\" className=\"form-control-plaintext\" id=\"staticEmail2\" defaultValue=\"email@example.com\"/>\\n' +\n                    '  </div>\\n' +\n                    '  <div className=\"form-group mx-sm-3 mb-2\">\\n' +\n                    '    <label htmlFor=\"inputPassword2\" className=\"sr-only\">Password</label>\\n' +\n                    '    <input type=\"password\" className=\"form-control\" id=\"inputPassword2\" placeholder=\"Password\"/>\\n' +\n                    '  </div>\\n' +\n                    '  <button type=\"submit\" className=\"btn btn-primary mb-2\">Confirm identity</button>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"range-input\">\n                <h5>Range input</h5>\n                <p>Set horizontally scrollable range inputs using <code>.form-control-range</code>.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"formControlRange\">Example Range input</label>\n                            <input type=\"range\" className=\"form-control-range\" id=\"formControlRange\" />\n                        </div>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <label htmlFor=\"formControlRange\">Example Range input</label>\\n' +\n                    '    <input type=\"range\" className=\"form-control-range\" id=\"formControlRange\">\\n' +\n                    '  </div>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default FormControls;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst CheckboxesAndRadios = () => {\n    return (\n        <div id=\"checkboxes-and-radios\">\n            <h4>Checkboxes and radios</h4>\n            <p>Default checkboxes and radios are improved upon with the help of <code>.form-check</code>, <strong>a single class for both input types that improves the layout and behavior of their HTML elements</strong>. Checkboxes are for selecting one or several options in a list, while radios are for selecting one option from many.</p>\n            <p>Disabled checkboxes and radios are supported. The <code>disabled</code> attribute will apply a lighter color to help indicate the input’s state.</p>\n            <p>Checkboxes and radio buttons support HTML-based form validation and provide concise, accessible labels. As such, our <code>&lt;input&gt;</code>s and <code>&lt;label&gt;</code>s are sibling elements as opposed to an <code>&lt;input&gt;</code> within a <code>&lt;label&gt;</code>. This is slightly more verbose as you must specify <code>id</code> and <code>for</code> attributes to relate the <code>&lt;input&gt;</code> and <code>&lt;label&gt;</code>.</p>\n\n            <div id=\"checkboxes-and-radios-default-stacked\">\n                <h5>Default (stacked)</h5>\n                <p>By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with <code>.form-check</code>.</p>\n\n                <div className=\"bd-example\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                            Default checkbox\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" disabled={ true } />\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck2\">\n                            Disabled checkbox\n                        </label>\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\\n' +\n                    '    Default checkbox\\n' +\n                    '  </label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" disabled=\"\"/>\\n' +\n                    '    <label className=\"form-check-label\" htmlFor=\"defaultCheck2\">\\n' +\n                    '      Disabled checkbox\\n' +\n                    '    </label>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-example\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" defaultChecked=\"\" />\n                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">Default radio</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\" />\n                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">Second default radio</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios3\" value=\"option3\" disabled={ true } />\n                        <label className=\"form-check-label\" htmlFor=\"exampleRadios3\">Disabled radio</label>\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"option1\" defaultChecked=\"\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\\n' +\n                    '    Default radio\\n' +\n                    '  </label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\\n' +\n                    '    Second default radio\\n' +\n                    '  </label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios3\" value=\"option3\" disabled=\"\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"exampleRadios3\">\\n' +\n                    '    Disabled radio\\n' +\n                    '  </label>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"checkboxes-and-radios-inline\">\n                <h5>Inline</h5>\n                <p>Group checkboxes or radios on the same horizontal row by adding <code>.form-check-inline</code> to any <code>.form-check</code>.</p>\n\n                <div className=\"bd-example\">\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">1</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\" />\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">2</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\" disabled={ true } />\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">3 (disabled)</label>\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">1</label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">2</label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\" disabled=\"\">\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">3 (disabled)</label>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-example\">\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\" />\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">1</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\" />\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">2</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value=\"option3\" disabled={ true } />\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">3 (disabled)</label>\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">1</label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">2</label>\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check form-check-inline\">\\n' +\n                    '  <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value=\"option3\" disabled=\"\"/>\\n' +\n                    '  <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">3 (disabled)</label>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"checkboxes-and-radios-without-labels\">\n                <h6>Without labels</h6>\n                <p>Add <code>.position-static</code> to inputs within <code>.form-check</code> that don’t have any label text. Remember to still provide some form of label for assistive technologies (for instance, using <code>aria-label</code>).</p>\n\n                <div className=\"bd-example\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input position-static\" type=\"checkbox\" id=\"blankCheckbox\" value=\"option1\" aria-label=\"...\" />\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input position-static\" type=\"radio\" name=\"blankRadio\" id=\"blankRadio1\" value=\"option1\" aria-label=\"...\" />\n                    </div>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input position-static\" type=\"checkbox\" id=\"blankCheckbox\" value=\"option1\" aria-label=\"...\">\\n' +\n                    '</div>\\n' +\n                    '<div className=\"form-check\">\\n' +\n                    '  <input className=\"form-check-input position-static\" type=\"radio\" name=\"blankRadio\" id=\"blankRadio1\" value=\"option1\" aria-label=\"...\">\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default CheckboxesAndRadios;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Link } from 'react-scroll';\n\nconst FormLayout = () => {\n    return (\n        <div id=\"form-layout\">\n            <h4>Layout</h4>\n            <p>Since Bootstrap applies <code>display: block</code> and <code>width: 100%</code> to almost all our form controls, forms will by default stack vertically. Additional classes can be used to vary this layout on a per-form basis.</p>\n\n            <div id=\"form-groups\">\n                <h5>Form groups</h5>\n                <p>The <code>.form-group</code> class is the easiest way to add some structure to forms. It provides a flexible class that encourages proper grouping of labels, controls, optional help text, and form validation messaging. By default it only applies <code>margin-bottom</code>, but it picks up additional styles in <code>.form-inline</code> as needed. Use it with <code>&lt;fieldset&gt;</code>s, <code>&lt;div&gt;</code>s, or nearly any other element.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"formGroupExampleInput\">Example label</label>\n                            <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Example input placeholder\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"formGroupExampleInput2\">Another label</label>\n                            <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Another input placeholder\" />\n                        </div>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <label htmlFor=\"formGroupExampleInput\">Example label</label>\\n' +\n                    '    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Example input placeholder\">\\n' +\n                    '  </div>\\n' +\n                    '  <div className=\"form-group\">\\n' +\n                    '    <label htmlFor=\"formGroupExampleInput2\">Another label</label>\\n' +\n                    '    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Another input placeholder\">\\n' +\n                    '  </div>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n\n            <div id=\"form-grid\">\n                <h5>Form grid</h5>\n                <p>More complex forms can be built using our grid classes. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.</p>\n\n                <div className=\"bd-example\">\n                    <form>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                            </div>\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form>\\n' +\n                    '  <div className=\"row\">\\n' +\n                    '    <div className=\"col\">\\n' +\n                    '      <input type=\"text\" className=\"form-control\" placeholder=\"First name\">\\n' +\n                    '    </div>\\n' +\n                    '    <div className=\"col\">\\n' +\n                    '      <input type=\"text\" className=\"form-control\" placeholder=\"Last name\">\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div id=\"form-row\">\n                    <h6>Form row</h6>\n                    <p>You may also swap <code>.row</code> for <code>.form-row</code>, a variation of our standard grid row that overrides the default column gutters for tighter and more compact layouts.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                                </div>\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row\">\\n' +\n                        '    <div className=\"col\">\\n' +\n                        '      <input type=\"text\" className=\"form-control\" placeholder=\"First name\"/>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col\">\\n' +\n                        '      <input type=\"text\" className=\"form-control\" placeholder=\"Last name\"/>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n\n                    <p>More complex layouts can also be created with the grid system.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"inputEmail4\">Email</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\n                                </div>\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"inputPassword4\">Password</label>\n                                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"inputAddress\">Address</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"inputAddress2\">Address 2</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"inputCity\">City</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label htmlFor=\"inputState\">State</label>\n                                    <select id=\"inputState\" className=\"form-control\">\n                                        <option defaultValue=\"Choose...\">Choose...</option>\n                                        <option>...</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group col-md-2\">\n                                    <label htmlFor=\"inputZip\">Zip</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\n                                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                                        Check me out\n                                    </label>\n                                </div>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row\">\\n' +\n                        '    <div className=\"form-group col-md-6\">\\n' +\n                        '      <label htmlFor=\"inputEmail4\">Email</label>\\n' +\n                        '      <input type=\"email\" className=\"form-control\" id=\"inputEmail4\"/>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"form-group col-md-6\">\\n' +\n                        '      <label htmlFor=\"inputPassword4\">Password</label>\\n' +\n                        '      <input type=\"password\" className=\"form-control\" id=\"inputPassword4\"/>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group\">\\n' +\n                        '    <label htmlFor=\"inputAddress\">Address</label>\\n' +\n                        '    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"/>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group\">\\n' +\n                        '    <label htmlFor=\"inputAddress2\">Address 2</label>\\n' +\n                        '    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\"/>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-row\">\\n' +\n                        '    <div className=\"form-group col-md-6\">\\n' +\n                        '      <label htmlFor=\"inputCity\">City</label>\\n' +\n                        '      <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"form-group col-md-4\">\\n' +\n                        '      <label htmlFor=\"inputState\">State</label>\\n' +\n                        '      <select id=\"inputState\" className=\"form-control\">\\n' +\n                        '        <option selected=\"\">Choose...</option>\\n' +\n                        '        <option>...</option>\\n' +\n                        '      </select>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"form-group col-md-2\">\\n' +\n                        '      <label htmlFor=\"inputZip\">Zip</label>\\n' +\n                        '      <input type=\"text\" className=\"form-control\" id=\"inputZip\"/>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group\">\\n' +\n                        '    <div className=\"form-check\">\\n' +\n                        '      <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\"/>\\n' +\n                        '      <label className=\"form-check-label\" htmlFor=\"gridCheck\">\\n' +\n                        '        Check me out\\n' +\n                        '      </label>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n                </div>\n\n                <div id=\"horizontal-form\">\n                    <h6>Horizontal form</h6>\n                    <p>Create horizontal forms with the grid by adding the <code>.row</code> class to form groups and using the <code>.col-*-*</code> classes to specify the width of your labels and controls. Be sure to add <code>.col-form-label</code> to your <code>&lt;label&gt;</code>s as well so they’re vertically centered with their associated form controls.</p>\n                    <p>At times, you maybe need to use margin or padding utilities to create that perfect alignment you need. For example, we’ve removed the <code>padding-top</code> on our stacked radio inputs label to better align the text baseline.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\n                                <div className=\"col-sm-10\">\n                                    <input type=\"email\" className=\"form-control\" id=\"inputEmail3\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Password</label>\n                                <div className=\"col-sm-10\">\n                                    <input type=\"password\" className=\"form-control\" id=\"inputPassword3\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <label className=\"col-form-label col-sm-2 pt-0\">Radios</label>\n                                    <div className=\"col-sm-10\">\n                                        <div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"option1\" defaultChecked=\"\" />\n                                            <label className=\"form-check-label\" htmlFor=\"gridRadios1\">First radio</label>\n                                        </div>\n                                        <div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"option2\" />\n                                            <label className=\"form-check-label\" htmlFor=\"gridRadios2\">Second radio</label>\n                                        </div>\n                                        <div className=\"form-check disabled\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\"\n                                                   id=\"gridRadios3\" value=\"option3\" disabled=\"\" />\n                                            <label className=\"form-check-label\" htmlFor=\"gridRadios3\">Third disabled radio</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-2\">Checkbox</div>\n                                <div className=\"col-sm-10\">\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\" />\n                                        <label className=\"form-check-label\" htmlFor=\"gridCheck1\">Example checkbox</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-10\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-group row\">\\n' +\n                        '    <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\\n' +\n                        '    <div className=\"col-sm-10\">\\n' +\n                        '      <input type=\"email\" className=\"form-control\" id=\"inputEmail3\">\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group row\">\\n' +\n                        '    <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Password</label>\\n' +\n                        '    <div className=\"col-sm-10\">\\n' +\n                        '      <input type=\"password\" className=\"form-control\" id=\"inputPassword3\">\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group\">\\n' +\n                        '    <div className=\"row\">\\n' +\n                        '      <label className=\"col-form-label col-sm-2 pt-0\">Radios</label>\\n' +\n                        '      <div className=\"col-sm-10\">\\n' +\n                        '        <div className=\"form-check\">\\n' +\n                        '          <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"option1\" defaultChecked=\"\">\\n' +\n                        '          <label className=\"form-check-label\" htmlFor=\"gridRadios1\">\\n' +\n                        '            First radio\\n' +\n                        '          </label>\\n' +\n                        '        </div>\\n' +\n                        '        <div className=\"form-check\">\\n' +\n                        '          <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"option2\">\\n' +\n                        '          <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\\n' +\n                        '            Second radio\\n' +\n                        '          </label>\\n' +\n                        '        </div>\\n' +\n                        '        <div className=\"form-check disabled\">\\n' +\n                        '          <input className=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios3\" value=\"option3\" disabled=\"\">\\n' +\n                        '          <label className=\"form-check-label\" htmlFor=\"gridRadios3\">\\n' +\n                        '            Third disabled radio\\n' +\n                        '          </label>\\n' +\n                        '        </div>\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group row\">\\n' +\n                        '    <div className=\"col-sm-2\">Checkbox</div>\\n' +\n                        '    <div className=\"col-sm-10\">\\n' +\n                        '      <div className=\"form-check\">\\n' +\n                        '        <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck1\">\\n' +\n                        '        <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\\n' +\n                        '          Example checkbox\\n' +\n                        '        </label>\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '  <div className=\"form-group row\">\\n' +\n                        '    <div className=\"col-sm-10\">\\n' +\n                        '      <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n\n                    <div id=\"horizontal-form-label-sizing\">\n                        <h6>Horizontal form label sizing</h6>\n                        <p>Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to your <code>&lt;label&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly follow the size of <code>.form-control-lg</code> and <code>.form-control-sm</code>.</p>\n\n                        <div className=\"bd-example\">\n                            <form>\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"colFormLabelSm\" className=\"col-sm-2 col-form-label col-form-label-sm\">Email</label>\n                                    <div className=\"col-sm-10\">\n                                        <input type=\"email\" className=\"form-control form-control-sm\" id=\"colFormLabelSm\" placeholder=\"col-form-label-sm\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\">Email</label>\n                                    <div className=\"col-sm-10\">\n                                        <input type=\"email\" className=\"form-control\" id=\"colFormLabel\" placeholder=\"col-form-label\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label htmlFor=\"colFormLabelLg\" className=\"col-sm-2 col-form-label col-form-label-lg\">Email</label>\n                                    <div className=\"col-sm-10\">\n                                        <input type=\"email\" className=\"form-control form-control-lg\" id=\"colFormLabelLg\" placeholder=\"col-form-label-lg\" />\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n\n                        <PrismCode\n                            code={\n                            '<form>\\n' +\n                            '  <div className=\"form-group row\">\\n' +\n                            '    <label htmlFor=\"colFormLabelSm\" className=\"col-sm-2 col-form-label col-form-label-sm\">Email</label>\\n' +\n                            '    <div className=\"col-sm-10\">\\n' +\n                            '      <input type=\"email\" className=\"form-control form-control-sm\" id=\"colFormLabelSm\" placeholder=\"col-form-label-sm\">\\n' +\n                            '    </div>\\n' +\n                            '  </div>\\n' +\n                            '  <div className=\"form-group row\">\\n' +\n                            '    <label htmlFor=\"colFormLabel\" className=\"col-sm-2 col-form-label\">Email</label>\\n' +\n                            '    <div className=\"col-sm-10\">\\n' +\n                            '      <input type=\"email\" className=\"form-control\" id=\"colFormLabel\" placeholder=\"col-form-label\">\\n' +\n                            '    </div>\\n' +\n                            '  </div>\\n' +\n                            '  <div className=\"form-group row\">\\n' +\n                            '    <label htmlFor=\"colFormLabelLg\" className=\"col-sm-2 col-form-label col-form-label-lg\">Email</label>\\n' +\n                            '    <div className=\"col-sm-10\">\\n' +\n                            '      <input type=\"email\" className=\"form-control form-control-lg\" id=\"colFormLabelLg\" placeholder=\"col-form-label-lg\">\\n' +\n                            '    </div>\\n' +\n                            '  </div>\\n' +\n                            '</form>'\n                            }\n                            language=\"html\"\n                            plugins={ [\"line-numbers\"] }\n                        />\n                    </div>\n                </div>\n\n                <div id=\"column-sizing\">\n                    <h6>Column sizing</h6>\n                    <p>As shown in the previous examples, our grid system allows you to place any number of <code>.col</code>s within a <code>.row</code> or <code>.form-row</code>. They’ll split the available width equally between them. You may also pick a subset of your columns to take up more or less space, while the remaining <code>.col</code>s equally split the rest, with specific column classes like <code>.col-7</code>.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"col-7\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"City\" />\n                                </div>\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"State\" />\n                                </div>\n                                <div className=\"col\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Zip\" />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row\">\\n' +\n                        '    <div className=\"col-7\">\\n' +\n                        '      <input type=\"text\" className=\"form-control\" placeholder=\"City\">\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col\">\\n' +\n                        '      <input type=\"text\" className=\"form-control\" placeholder=\"State\">\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col\">\\n' +\n                        '      <input type=\"text\" className=\"form-control\" placeholder=\"Zip\">\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n                </div>\n\n                <div id=\"auto-sizing\">\n                    <h6>Auto-sizing</h6>\n                    <p>The example below uses a flexbox utility to vertically center the contents and changes <code>.col</code> to <code>.col-auto</code> so that your columns only take up as much space as needed. Put another way, the column sizes itself based on the contents.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-auto\">\n                                    <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Name</label>\n                                    <input type=\"text\" className=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\" />\n                                </div>\n                                <div className=\"col-auto\">\n                                    <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Username</label>\n                                    <div className=\"input-group mb-2\">\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">@</div>\n                                        </div>\n                                        <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Username\" />\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <div className=\"form-check mb-2\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\" />\n                                        <label className=\"form-check-label\" htmlFor=\"autoSizingCheck\">Remember me</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <button type=\"submit\" className=\"btn btn-primary mb-2\">Submit</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row align-items-center\">\\n' +\n                        '    <div className=\"col-auto\">\\n' +\n                        '      <label className=\"sr-only\" htmlFor=\"inlineFormInput\">Name</label>\\n' +\n                        '      <input type=\"text\" className=\"form-control mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\">\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto\">\\n' +\n                        '      <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Username</label>\\n' +\n                        '      <div className=\"input-group mb-2\">\\n' +\n                        '        <div className=\"input-group-prepend\">\\n' +\n                        '          <div className=\"input-group-text\">@</div>\\n' +\n                        '        </div>\\n' +\n                        '        <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Username\">\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto\">\\n' +\n                        '      <div className=\"form-check mb-2\">\\n' +\n                        '        <input className=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck\">\\n' +\n                        '        <label className=\"form-check-label\" htmlFor=\"autoSizingCheck\">\\n' +\n                        '          Remember me\\n' +\n                        '        </label>\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto\">\\n' +\n                        '      <button type=\"submit\" className=\"btn btn-primary mb-2\">Submit</button>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n\n                    <p>You can then remix that once again with size-specific column classes.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-sm-3 my-1\">\n                                    <label className=\"sr-only\" htmlFor=\"inlineFormInputName\">Name</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"inlineFormInputName\" placeholder=\"Jane Doe\" />\n                                </div>\n                                <div className=\"col-sm-3 my-1\">\n                                    <label className=\"sr-only\" htmlFor=\"inlineFormInputGroupUsername\">Username</label>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">@</div>\n                                        </div>\n                                        <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername\" placeholder=\"Username\" />\n                                    </div>\n                                </div>\n                                <div className=\"col-auto my-1\">\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\" />\n                                        <label className=\"form-check-label\" htmlFor=\"autoSizingCheck2\">Remember me</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-auto my-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row align-items-center\">\\n' +\n                        '    <div className=\"col-sm-3 my-1\">\\n' +\n                        '      <label className=\"sr-only\" htmlFor=\"inlineFormInputName\">Name</label>\\n' +\n                        '      <input type=\"text\" className=\"form-control\" id=\"inlineFormInputName\" placeholder=\"Jane Doe\">\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-sm-3 my-1\">\\n' +\n                        '      <label className=\"sr-only\" htmlFor=\"inlineFormInputGroupUsername\">Username</label>\\n' +\n                        '      <div className=\"input-group\">\\n' +\n                        '        <div className=\"input-group-prepend\">\\n' +\n                        '          <div className=\"input-group-text\">@</div>\\n' +\n                        '        </div>\\n' +\n                        '        <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername\" placeholder=\"Username\">\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto my-1\">\\n' +\n                        '      <div className=\"form-check\">\\n' +\n                        '        <input className=\"form-check-input\" type=\"checkbox\" id=\"autoSizingCheck2\">\\n' +\n                        '        <label className=\"form-check-label\" htmlFor=\"autoSizingCheck2\">\\n' +\n                        '          Remember me\\n' +\n                        '        </label>\\n' +\n                        '      </div>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto my-1\">\\n' +\n                        '      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\\n' +\n                        '    </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n\n                    <p>And of course custom form controls are supported.</p>\n\n                    <div className=\"bd-example\">\n                        <form>\n                            <div className=\"form-row align-items-center\">\n                                <div className=\"col-auto my-1\">\n                                    <label className=\"mr-sm-2 sr-only\" htmlFor=\"inlineFormCustomSelect\">Preference</label>\n                                    <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                                        <option defaultValue=\"0\">Choose...</option>\n                                        <option defaultValue=\"1\">One</option>\n                                        <option defaultValue=\"2\">Two</option>\n                                        <option defaultValue=\"3\">Three</option>\n                                    </select>\n                                </div>\n                                <div className=\"col-auto my-1\">\n                                    <div className=\"custom-control custom-checkbox mr-sm-2\">\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlAutosizing\" />\n                                        <label className=\"custom-control-label\" htmlFor=\"customControlAutosizing\">Remember my preference</label>\n                                    </div>\n                                </div>\n                                <div className=\"col-auto my-1\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                    <PrismCode\n                        code={\n                        '<form>\\n' +\n                        '  <div className=\"form-row align-items-center\">\\n' +\n                        '    <div className=\"col-auto my-1\">\\n' +\n                        '      <label className=\"mr-sm-2 sr-only\" htmlFor=\"inlineFormCustomSelect\">Preference</label>\\n' +\n                        '      <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\\n' +\n                        '        <option defaultValue=\"0\">Choose...</option>\\n' +\n                        '        <option defaultValue=\"1\">One</option>\\n' +\n                        '        <option defaultValue=\"2\">Two</option>\\n' +\n                        '        <option defaultValue=\"3\">Three</option>\\n' +\n                        '      </select>\\n' +\n                        '    </div>\\n' +\n                        '    <div className=\"col-auto my-1\">\\n' +\n                        '      <div className=\"custom-control custom-checkbox mr-sm-2\">\\n' +\n                        '        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlAutosizing\">\\n' +\n                        '        <label className=\"custom-control-label\" htmlFor=\"customControlAutosizing\">Remember my preference</label>\\n' +\n                        '     </div>\\n' +\n                        '   </div>\\n' +\n                        '   <div className=\"col-auto my-1\">\\n' +\n                        '     <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\\n' +\n                        '   </div>\\n' +\n                        '  </div>\\n' +\n                        '</form>'\n                        }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n                </div>\n            </div>\n\n\n            <div id=\"inline-forms\">\n                <h5>Inline forms</h5>\n                <p>Use the <code>.form-inline</code> class to display a series of labels, form controls, and buttons on a single horizontal row. Form controls within inline forms vary slightly from their default states.</p>\n\n                <ul>\n                    <li>Controls are <code>display: flex</code>, collapsing any HTML white space and allowing you to provide alignment control with <Link title=\"Spacing\" className=\"scroll-to-id\" to=\"spacing\" spy={ true } smooth={ true } duration={ 0 } href=\"#spacing\">spacing</Link> and <Link title=\"Flex\" className=\"scroll-to-id\" to=\"flex\" spy={ true } smooth={ true } duration={ 0 } href=\"#flex\">flexbox</Link> utilities.</li>\n                    <li>Controls and input groups receive <code>width: auto</code> to override the Bootstrap default <code>width: 100%</code>.</li>\n                    <li>Controls <strong>only appear inline in viewports that are at least 576px wide</strong> to account for narrow viewports on mobile devices.</li>\n                </ul>\n\n                <p>You may need to manually address the width and alignment of individual form controls with <Link title=\"Spacing\" className=\"scroll-to-id\" to=\"spacing\" spy={ true } smooth={ true } duration={ 0 } href=\"#spacing\">spacing utilities</Link> (as shown below). Lastly, be sure to always include a <code>&lt;label&gt;</code> with each form control, even if you need to hide it from non-screenreader visitors with <code>.sr-only</code>.</p>\n\n                <div className=\"bd-example\">\n                    <form className=\"form-inline\">\n                        <label className=\"sr-only\" htmlFor=\"inlineFormInputName2\">Name</label>\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Jane Doe\" />\n\n                        <label className=\"sr-only\" htmlFor=\"inlineFormInputGroupUsername2\">Username</label>\n                        <div className=\"input-group mb-2 mr-sm-2\">\n                            <div className=\"input-group-prepend\">\n                                <div className=\"input-group-text\">@</div>\n                            </div>\n                            <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Username\" />\n                        </div>\n\n                        <div className=\"form-check mb-2 mr-sm-2\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck\" />\n                            <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">Remember me</label>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary mb-2\">Submit</button>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form className=\"form-inline\">\\n' +\n                    '  <label className=\"sr-only\" htmlFor=\"inlineFormInputName2\">Name</label>\\n' +\n                    '  <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Jane Doe\">\\n' +\n                    '\\n' +\n                    '  <label className=\"sr-only\" htmlFor=\"inlineFormInputGroupUsername2\">Username</label>\\n' +\n                    '  <div className=\"input-group mb-2 mr-sm-2\">\\n' +\n                    '    <div className=\"input-group-prepend\">\\n' +\n                    '      <div className=\"input-group-text\">@</div>\\n' +\n                    '    </div>\\n' +\n                    '    <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Username\">\\n' +\n                    '  </div>\\n' +\n                    '\\n' +\n                    '  <div className=\"form-check mb-2 mr-sm-2\">\\n' +\n                    '    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck\">\\n' +\n                    '    <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\\n' +\n                    '      Remember me\\n' +\n                    '    </label>\\n' +\n                    '  </div>\\n' +\n                    '\\n' +\n                    '  <button type=\"submit\" className=\"btn btn-primary mb-2\">Submit</button>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <p>Custom form controls and selects are also supported.</p>\n\n                <div className=\"bd-example\">\n                    <form className=\"form-inline\">\n                        <label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">Preference</label>\n                        <select className=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n                            <option defaultValue=\"0\">Choose...</option>\n                            <option defaultValue=\"1\">One</option>\n                            <option defaultValue=\"2\">Two</option>\n                            <option defaultValue=\"3\">Three</option>\n                        </select>\n\n                        <div className=\"custom-control custom-checkbox my-1 mr-sm-2\">\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlInline\" />\n                            <label className=\"custom-control-label\" htmlFor=\"customControlInline\">Remember my preference</label>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary my-1\">Submit</button>\n                    </form>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<form className=\"form-inline\">\\n' +\n                    '  <label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">Preference</label>\\n' +\n                    '  <select className=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\\n' +\n                    '    <option selected=\"\">Choose...</option>\\n' +\n                    '    <option value=\"1\">One</option>\\n' +\n                    '    <option value=\"2\">Two</option>\\n' +\n                    '    <option value=\"3\">Three</option>\\n' +\n                    '  </select>\\n' +\n                    '\\n' +\n                    '  <div className=\"custom-control custom-checkbox my-1 mr-sm-2\">\\n' +\n                    '    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customControlInline\">\\n' +\n                    '    <label className=\"custom-control-label\" htmlFor=\"customControlInline\">Remember my preference</label>\\n' +\n                    '  </div>\\n' +\n                    '\\n' +\n                    '  <button type=\"submit\" className=\"btn btn-primary my-1\">Submit</button>\\n' +\n                    '</form>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <div className=\"bd-callout bd-callout-warning\">\n                    <h5>Alternatives to hidden labels</h5>\n                    <p>Assistive technologies such as screen readers will have trouble with your forms if you don’t include a label for every input. For these inline forms, you can hide the labels using the <code>.sr-only</code> class. There are further alternative methods of providing a label for assistive technologies, such as the <code>aria-label</code>, <code>aria-labelledby</code> or <code>title</code> attribute. If none of these are present, assistive technologies may resort to using the <code>placeholder</code> attribute, if present, but note that use of <code>placeholder</code> as a replacement for other labelling methods is not advised.</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FormLayout;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst HelpText = () => {\n    return (\n        <div id=\"help-text\">\n            <h4>Help text</h4>\n            <p>Block-level help text in forms can be created using <code>.form-text</code> (previously known as <code>.help-block</code> in v3). Inline help text can be flexibly implemented using any inline HTML element and utility classes like <code>.text-muted</code>.</p>\n\n            <div className=\"bd-callout bd-callout-warning\">\n                <h5>Associating help text with form controls</h5>\n\n                <p>Help text should be explicitly associated with the form control it relates to using the <code>aria-describedby</code> attribute. This will ensure that assistive technologies—such as screen readers—will announce this help text when the user focuses or enters the control.</p>\n            </div>\n\n            <p>Help text below inputs can be styled with <code>.form-text</code>. This class includes <code>display: block</code> and adds some top margin for easy spacing from the inputs above.</p>\n\n            <div className=\"bd-example\">\n                <label htmlFor=\"inputPassword5\">Password</label>\n                <input type=\"password\" id=\"inputPassword5\" className=\"form-control\" aria-describedby=\"passwordHelpBlock\" />\n                <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.</small>\n            </div>\n\n            <PrismCode\n                code={\n                '<label htmlFor=\"inputPassword5\">Password</label>\\n' +\n                '<input type=\"password\" id=\"inputPassword5\" className=\"form-control\" aria-describedby=\"passwordHelpBlock\">\\n' +\n                '  <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\\n' +\n                '    Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\\n' +\n                '  </small>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n\n            <p>Inline text can use any typical inline HTML element (be it a <code>&lt;small&gt;</code>, <code>&lt;span&gt;</code>, or something else) with nothing more than a utility class.</p>\n\n            <div className=\"bd-example\">\n                <form className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputPassword6\">Password</label>\n                        <input type=\"password\" id=\"inputPassword6\" className=\"form-control mx-sm-3\" aria-describedby=\"passwordHelpInline\" />\n                        <small id=\"passwordHelpInline\" className=\"text-muted\">Must be 8-20 characters long.</small>\n                    </div>\n                </form>\n            </div>\n\n            <PrismCode\n                code={\n                '<form className=\"form-inline\">\\n' +\n                '  <div className=\"form-group\">\\n' +\n                '    <label htmlFor=\"inputPassword6\">Password</label>\\n' +\n                '    <input type=\"password\" id=\"inputPassword6\" className=\"form-control mx-sm-3\" aria-describedby=\"passwordHelpInline\">\\n' +\n                '    <small id=\"passwordHelpInline\" className=\"text-muted\">\\n' +\n                '      Must be 8-20 characters long.\\n' +\n                '    </small>\\n' +\n                '  </div>\\n' +\n                '</form>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default HelpText;\n","import React from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\n\nconst DisabledForms = () => {\n    return (\n        <div id=\"disabled-forms\">\n            <h4>Disabled forms</h4>\n            <p>Add the <code>disabled</code> boolean attribute on an input to prevent user interactions and make it appear lighter.</p>\n\n            <figure className=\"highlight\">\n                <pre><code className=\"language-html\">&lt;input className=&quot;form-control&quot; id=&quot;disabledInput&quot; type=&quot;text&quot; placeholder=&quot;Disabled input here...&quot; disabled&gt;</code></pre>\n            </figure>\n\n            <p>Add the <code>disabled</code> attribute to a <code>&lt;fieldset&gt;</code> to disable all the controls within.</p>\n\n            <div className=\"bd-example\">\n                <form>\n                    <fieldset disabled=\"\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"disabledTextInput\">Disabled input</label>\n                            <input type=\"text\" id=\"disabledTextInput\" className=\"form-control\" placeholder=\"Disabled input\" disabled={ true } />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"disabledSelect\">Disabled select menu</label>\n                            <select id=\"disabledSelect\" className=\"form-control\" disabled={ true }>\n                                <option>Disabled select</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"disabledFieldsetCheck\" disabled={ true } />\n                                <label className=\"form-check-label\" htmlFor=\"disabledFieldsetCheck\">Can't check this</label>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </fieldset>\n                </form>\n            </div>\n\n            <PrismCode\n                code={\n                '<form>\\n' +\n                '  <fieldset disabled=\"\">\\n' +\n                '    <div className=\"form-group\">\\n' +\n                '      <label htmlFor=\"disabledTextInput\">Disabled input</label>\\n' +\n                '      <input type=\"text\" id=\"disabledTextInput\" className=\"form-control\" placeholder=\"Disabled input\">\\n' +\n                '    </div>\\n' +\n                '    <div className=\"form-group\">\\n' +\n                '      <label htmlFor=\"disabledSelect\">Disabled select menu</label>\\n' +\n                '      <select id=\"disabledSelect\" className=\"form-control\">\\n' +\n                '        <option>Disabled select</option>\\n' +\n                '      </select>\\n' +\n                '    </div>\\n' +\n                '    <div className=\"form-group\">\\n' +\n                '      <div className=\"form-check\">\\n' +\n                '        <input className=\"form-check-input\" type=\"checkbox\" id=\"disabledFieldsetCheck\" disabled=\"\">\\n' +\n                '        <label className=\"form-check-label\" htmlFor=\"disabledFieldsetCheck\">\\n' +\n                '          Can\\'t check this\\n' +\n                '        </label>\\n' +\n                '      </div>\\n' +\n                '    </div>\\n' +\n                '    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\\n' +\n                '  </fieldset>\\n' +\n                '</form>'\n                }\n                language=\"html\"\n                plugins={ [\"line-numbers\"] }\n            />\n        </div>\n    );\n};\n\nexport default DisabledForms;\n","import React, { Component } from 'react';\nimport MoreExamples from '../../blocks/MoreExamples';\nimport FormExamples from './children/FormExamples';\nimport FormControls from './children/FormControls';\nimport CheckboxesAndRadios from './children/CheckboxesAndRadios';\nimport FormLayout from './children/FormLayout';\nimport HelpText from './children/HelpText';\nimport DisabledForms from './children/DisabledForms';\n\nclass Forms extends Component {\n    render() {\n        return (\n            <div id=\"forms\" className=\"spacer m-top-xl\">\n                <h3>Forms</h3>\n                <p>Several form control styles, layout options, and custom components for creating a wide variety of forms.</p>\n\n                <FormExamples />\n\n                <FormControls />\n\n                <CheckboxesAndRadios />\n\n                <FormLayout />\n\n                <HelpText />\n\n                <DisabledForms />\n\n                <MoreExamples actionLink=\"https://getbootstrap.com/docs/4.4/components/forms/\"\n                              actionLinkContent=\"Bootstrap 4 documentation\"\n                              contentBefore=\"For more examples and demo data, click \"\n                              contentAfter=\".\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Forms;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass ModalCustom extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n\n    render() {\n        return (\n            <div id=\"modal-custom\">\n                <h4>Custom</h4>\n                <p>You also need adding <code>.modal-full</code> to .modal-dialog, <code>.modal-header-top</code> to .modal-header and <code>.modal-body-centered</code> to .modal-body.</p>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#demo-modal\">Demo modal</button>\n\n                    <Modal\n                        className=\"modal fade\"\n                        dialogClassName=\"modal-full\"\n                        show={ this.state.showModal }\n                        onHide={ this.close }\n                        backdrop={ true }\n                        id=\"demo-modal\"\n                        tabIndex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"demo-modal\"\n                        aria-hidden=\"true\">\n                        <div className=\"wrapper\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header modal-header-top\">\n                                    <button type=\"button\" onClick={ this.close } className=\"close btn btn-link border-0 min-w-auto transform-scale-h\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span className=\"adveits-i adv-close\">\n                                            <span>x</span>\n                                            <span></span>\n                                        </span>\n                                    </button>\n                                </div>\n\n                                <div className=\"modal-body modal-body-centered\">\n                                    <p>Modal body text goes here.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#demo-modal\">Demo modal</button>\\n' +\n                    '\\n' +\n                    '<div className=\"modal fade\" id=\"demo-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"demo-modal\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-full\" role=\"document\">\\n' +\n                    '    <div className=\"wrapper\">\\n' +\n                    '      <div className=\"modal-content\">\\n' +\n                    '        <div className=\"modal-header modal-header-top\">\\n' +\n                    '          <button type=\"button\" className=\"close btn btn-link border-0 min-w-auto transform-scale-h\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '            <span className=\"adveits-i adv-close\">\\n' +\n                    '              <span></span>\\n' +\n                    '              <span></span>\\n' +\n                    '            </span>\\n' +\n                    '          </button>\\n' +\n                    '        </div>\\n' +\n                    '\\n' +\n                    '        <div className=\"modal-body modal-body-centered\">\\n' +\n                    '          <p>Modal body text goes here.</p>\\n' +\n                    '        </div>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        );\n    }\n};\n\nexport default ModalCustom;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass LiveDemo extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <div id=\"live-demo\">\n                <h5>Live demo</h5>\n                <p>Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.</p>\n\n                <Modal id=\"exampleModalLive\"\n                       show={ this.state.showModal }\n                       onHide={ this.close }\n                       backdrop={ false }\n                       className=\"modal fade\" tabIndex=\"-1\"\n                       role=\"dialog\"\n                       aria-labelledby=\"exampleModalLiveLabel\"\n                       style={ { \"display\": \"none\" } }\n                       aria-hidden=\"true\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLiveLabel\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>Woohoo, you're reading this text in a modal!</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalLive\">Launch demo modal</button>\n                </div>\n\n                <PrismCode\n                    code={\n                    '<div id=\"exampleModalLive\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLiveLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"exampleModalLiveLabel\">Modal title</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        <p>Woohoo, you\\'re reading this text in a modal!</p>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-footer\">\\n' +\n                    '        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"bd-example\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalLive\">\\n' +\n                    '    Launch demo modal\\n' +\n                    '  </button>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        );\n    }\n};\n\nexport default LiveDemo;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass StaticBackdrop extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <div id=\"static-backdrop\">\n                <h5>Static backdrop</h5>\n                <p>When backdrop is set to static, the modal will not close when clicking outside it. Click the button\n                    below to try it.</p>\n\n                <Modal id=\"staticBackdropLive\"\n                       show={ this.state.showModal }\n                       onHide={ this.close }\n                       className=\"modal fade\"\n                       backdrop=\"static\"\n                       tabIndex=\"-1\"\n                       role=\"dialog\"\n                       aria-labelledby=\"staticBackdropLiveLabel\"\n                       aria-hidden=\"true\" style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"staticBackdropLiveLabel\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>I will not close if you click outside me. Don't even try to press escape key.</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Understood</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#staticBackdropLive\">\n                        Launch static backdrop modal\n                    </button>\n                </div>\n\n                <PrismCode\n                    code={ '<div id=\"staticBackdropLive\" className=\"modal fade\" data-backdrop=\"static\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"staticBackdropLiveLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"staticBackdropLiveLabel\">Modal title</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        <p>I will not close if you click outside me. Don\\'t even try to press escape key.</p>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-footer\">\\n' +\n                    '        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '        <button type=\"button\" className=\"btn btn-primary\">Understood</button>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"bd-example\">\\n' +\n                    '    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#staticBackdropLive\">\\n' +\n                    '        Launch static backdrop modal\\n' +\n                    '    </button>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        );\n    }\n};\n\nexport default StaticBackdrop;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass ScrollingLongContent extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <div id=\"scrolling-long-content\">\n                <h5>Scrolling long content</h5>\n                <p>When modals become too long for the user’s viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.</p>\n\n                <Modal\n                    id=\"exampleModalLong\"\n                    show={ this.state.showModal }\n                    onHide={ this.close }\n                    className=\"modal fade\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"exampleModalLongTitle\"\n                    aria-hidden=\"true\"\n                    style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\n                        Launch demo modal\n                    </button>\n                </div>\n\n                <PrismCode\n                    code={ '<div id=\"exampleModalLong\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '    </div>\\n' +\n                    '    <div className=\"modal-body\">\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '      <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '    </div>\\n' +\n                    '    <div className=\"modal-footer\">\\n' +\n                    '      <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '      <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"bd-example\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\\n' +\n                    '    Launch demo modal\\n' +\n                    '  </button>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n                <p>You can also create a scrollable modal that allows scroll the modal body by adding <code>.modal-dialog-scrollable</code> to <code>.modal-dialog</code>.</p>\n\n                <Modal\n                    id=\"exampleModalScrollable\"\n                    className=\"modal fade\"\n                    dialogClassName=\"modal-dialog modal-dialog-scrollable\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"exampleModalScrollableTitle\"\n                    aria-hidden=\"true\" style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalScrollableTitle\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalScrollable\">\n                        Launch demo modal\n                    </button>\n                </div>\n\n                <PrismCode\n                    code={ '<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalScrollable\">\\n' +\n                    '  Launch demo modal\\n' +\n                    '</button>\\n' +\n                    '\\n' +\n                    '<div class=\"modal fade\" id=\"exampleModalScrollable\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalScrollableTitle\" aria-hidden=\"true\">\\n' +\n                    '  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\\n' +\n                    '    <div class=\"modal-content\">\\n' +\n                    '      <div class=\"modal-header\">\\n' +\n                    '        <h5 class=\"modal-title\" id=\"exampleModalScrollableTitle\">Modal title</h5>\\n' +\n                    '        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">&times;</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div class=\"modal-body\">\\n' +\n                    '        ...\\n' +\n                    '      </div>\\n' +\n                    '      <div class=\"modal-footer\">\\n' +\n                    '        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        );\n    }\n};\n\nexport default ScrollingLongContent;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass VerticallyCentered extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal: false\n        };\n\n        this.open = this.open.bind( this );\n        this.close = this.close.bind( this );\n    }\n\n    open() {\n        this.setState( { showModal: true }, function () {\n        } );\n    }\n\n    close() {\n        this.setState( { showModal: false } );\n    }\n\n    render() {\n        return (\n            <div id=\"vertically-centered\">\n                <h5>Vertically centered</h5>\n                <p>Add <code>.modal-dialog-centered</code> to <code>.modal-dialog</code> to vertically center the modal.\n                </p>\n\n                <Modal id=\"exampleModalCenter\"\n                       show={ this.state.showModal }\n                       onHide={ this.close }\n                       backdrop={ false }\n                       dialogClassName=\"modal-dialog modal-dialog-centered\"\n                       className=\"modal fade\"\n                       tabIndex=\"-1\"\n                       role=\"dialog\"\n                       aria-labelledby=\"exampleModalCenterTitle\"\n                       aria-hidden=\"true\"\n                       style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal id=\"exampleModalCenteredScrollable\"\n                       show={ this.state.showModal }\n                       onHide={ this.close }\n                       backdrop={ false }\n                       dialogClassName=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\"\n                       className=\"modal fade\"\n                       tabIndex=\"-1\"\n                       role=\"dialog\"\n                       aria-labelledby=\"exampleModalCenteredScrollableTitle\"\n                       aria-hidden=\"true\"\n                       style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalCenteredScrollableTitle\">Modal title</h5>\n                            <button onClick={ this.close } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                            <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close\n                            </button>\n                            <button onClick={ this.close } type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary \" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Vertically centered modal</button>\n                    <button onClick={ this.open.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenteredScrollable\">Vertically centered scrollable modal</button>\n                </div>\n                <PrismCode\n                    code={ '<div id=\"exampleModalCenter\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Modal title</h5>\\n' +\n                    '          <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '            <span aria-hidden=\"true\">×</span>\\n' +\n                    '          </button>\\n' +\n                    '        </div>\\n' +\n                    '        <div className=\"modal-body\">\\n' +\n                    '          <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '        </div>\\n' +\n                    '        <div className=\"modal-footer\">\\n' +\n                    '          <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '           <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\\n' +\n                    '        </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div id=\"exampleModalCenteredScrollable\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenteredScrollableTitle\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"exampleModalCenteredScrollableTitle\">Modal title</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '        <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>\\n' +\n                    '        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\\n' +\n                    '        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-footer\">\\n' +\n                    '        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\\n' +\n                    '        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"bd-example\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\\n' +\n                    '    Vertically centered modal\\n' +\n                    '  </button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenteredScrollable\">\\n' +\n                    '    Vertically centered scrollable modal\\n' +\n                    '  </button>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n\n            </div>\n        );\n    }\n};\n\nexport default VerticallyCentered;\n","import React, { Component } from 'react';\nimport { PrismCode } from '../../../../../components/prsimjs/Prismjs';\nimport { Modal } from 'react-bootstrap';\n\nclass OptionalSize extends Component {\n\n    constructor( context ) {\n        super( context );\n\n        this.state = {\n            showModal0: false,\n            showModal1: false,\n            showModal2: false,\n            showModal3: false\n        };\n\n        this.open0 = this.open0.bind( this );\n        this.open1 = this.open1.bind( this );\n        this.open2 = this.open2.bind( this );\n        this.open3 = this.open3.bind( this );\n        this.close0 = this.close0.bind( this );\n        this.close1 = this.close1.bind( this );\n        this.close2 = this.close2.bind( this );\n        this.close3 = this.close3.bind( this );\n    }\n\n    open0() {\n        this.setState( { showModal0: true }, function () {\n        } );\n    }\n\n    open1() {\n        this.setState( { showModal1: true }, function () {\n        } );\n    }\n\n    open2() {\n        this.setState( { showModal2: true }, function () {\n        } );\n    }\n\n    open3() {\n        this.setState( { showModal3: true }, function () {\n        } );\n    }\n\n    close0() {\n        this.setState( { showModal0: false } );\n    }\n\n    close1() {\n        this.setState( { showModal1: false } );\n    }\n\n    close2() {\n        this.setState( { showModal2: false } );\n    }\n\n    close3() {\n        this.setState( { showModal3: false } );\n    }\n\n    render() {\n        return (\n            <div id=\"optional-size\">\n                <h5>Optional size</h5>\n                <p>Modals have three optional sizes, available via modifier classes to be placed on a <code>.modal-dialog</code>. These sizes kick in at certain breakpoints to avoid horizontal scrollbars on narrower viewports.</p>\n\n                <div className=\"bd-example\">\n                    <button onClick={ this.open0.bind( this ) } type=\"button\" className=\"btn btn-primary \" data-toggle=\"modal\" data-target=\".bd-example-modal-full\">Full modal</button>\n                    <button onClick={ this.open1.bind( this ) } type=\"button\" className=\"btn btn-primary \" data-toggle=\"modal\" data-target=\".bd-example-modal-xl\">Extra large modal</button>\n                    <button onClick={ this.open2.bind( this ) } type=\"button\" className=\"btn btn-primary \" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Large modal</button>\n                    <button onClick={ this.open3.bind( this ) } type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-sm\">Small modal</button>\n                </div>\n\n                <Modal\n                    className=\"modal fade bd-example-modal-full\"\n                    show={ this.state.showModal0 }\n                    onHide={ this.close0 }\n                    dialogClassName=\"modal-full\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"myFullModalLabel\"\n                    aria-hidden=\"true\"\n                    style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"myFullModalLabel\">Full modal</h5>\n                            <button onClick={ this.close0 } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            ...\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal\n                    className=\"modal fade bd-example-modal-xl\"\n                    show={ this.state.showModal1 }\n                    onHide={ this.close1 }\n                    dialogClassName=\"modal-xl\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"myExtraLargeModalLabel\"\n                    aria-hidden=\"true\"\n                    style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"myExtraLargeModalLabel\">Extra large modal</h5>\n                            <button onClick={ this.close1 } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            ...\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal className=\"modal fade bd-example-modal-lg\"\n                       dialogClassName=\"modal-lg\"\n                       show={ this.state.showModal2 }\n                       onHide={ this.close2 }\n                       tabIndex=\"-1\"\n                       role=\"dialog\"\n                       aria-labelledby=\"myLargeModalLabel\"\n                       aria-hidden=\"true\"\n                       style={ { \"display\": \"none\" } }>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"myLargeModalLabel\">Large modal</h5>\n                            <button onClick={ this.close2 } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            ...\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal\n                    dialogClassName=\"modal-sm\"\n                    show={ this.state.showModal3 }\n                    onHide={ this.close3 }\n                    className=\"modal fade bd-example-modal-sm\"\n                    tabIndex=\"-1\"\n                    role=\"dialog\"\n                    aria-labelledby=\"mySmallModalLabel\"\n                    aria-hidden=\"true\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"mySmallModalLabel\">Small modal</h5>\n                            <button onClick={ this.close3 } type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            ...\n                        </div>\n                    </div>\n                </Modal>\n\n                <PrismCode\n                    code={\n                    '<div className=\"bd-example\">\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-full\">Full modal</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-xl\">Extra large modal</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Large modal</button>\\n' +\n                    '  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-sm\">Small modal</button>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"modal fade bd-example-modal-full\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myFullModalLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-full\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"myFullModalLabel\">Full modal</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        ...\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"modal fade bd-example-modal-xl\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myExtraLargeModalLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-xl\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"myExtraLargeModalLabel\">Extra large modal</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        ...\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"modal fade bd-example-modal-lg\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-lg\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"myLargeModalLabel\">Large modal</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        ...\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '<div className=\"modal fade bd-example-modal-sm\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\\n' +\n                    '  <div className=\"modal-dialog modal-sm\" role=\"document\">\\n' +\n                    '    <div className=\"modal-content\">\\n' +\n                    '      <div className=\"modal-header\">\\n' +\n                    '        <h5 className=\"modal-title\" id=\"mySmallModalLabel\">Small modal</h5>\\n' +\n                    '        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\\n' +\n                    '          <span aria-hidden=\"true\">×</span>\\n' +\n                    '        </button>\\n' +\n                    '      </div>\\n' +\n                    '      <div className=\"modal-body\">\\n' +\n                    '        ...\\n' +\n                    '      </div>\\n' +\n                    '    </div>\\n' +\n                    '  </div>\\n' +\n                    '</div>'\n                    }\n                    language=\"html\"\n                    plugins={ [\"line-numbers\"] }\n                />\n            </div>\n        );\n    }\n};\n\nexport default OptionalSize;\n","import React, { Component } from 'react';\nimport SwipeBox from 'fslightbox-react';\nimport MoreExamples from '../../blocks/MoreExamples';\nimport { PrismCode } from '../../../../components/prsimjs/Prismjs';\n\nclass Popup extends Component {\n    state     = {\n        isVisible: false,\n        slide: 0,\n    };\n    showSlide = ( slide, event ) => {\n        event.preventDefault();\n        this.setState( {\n            isVisible: ! this.state.isVisible,\n            slide: slide\n        } );\n    };\n\n    render() {\n        return (\n            <div id=\"pop-up\" className=\"spacer m-top-xl\">\n                <h3>Pop-up</h3>\n                <p>A touchable React Js lightbox.</p>\n\n                <div id=\"swipebox\">\n                    <h4>Swipebox</h4>\n                    <p>Swipebox is a React Js \"lightbox\" plugin for desktop, mobile and tablet.</p>\n\n                    <div className=\"bd-example bd-example-images\">\n                        <a onClick={ ( event ) => this.showSlide( 1, event ) } className=\"btn btn-primary swipebox\" href=\"#example-image\">Open blank image</a>\n                    </div>\n\n                    <SwipeBox\n                        toggler={ this.state.isVisible }\n                        slide={ this.state.slide }\n                        urls={ [\n                            'assets/img/ui/300x300.jpg',\n                        ] }\n                    />\n\n                    <PrismCode\n                        code={ '<SwipeBox />' }\n                        language=\"html\"\n                        plugins={ [\"line-numbers\"] }\n                    />\n                </div>\n\n                <MoreExamples actionLink=\"https://fslightbox.com/\"\n                              actionLinkContent=\"Swipebox documentation\"\n                              contentBefore=\"For more examples and demo data, click \"\n                              contentAfter=\".\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Popup;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contacts from './pages/Contacts';\nimport News from './pages/News';\nimport NewsSinglePost from './pages/NewsSinglePost';\nimport Gallery from './pages/Gallery';\nimport SearchResults from './pages/SearchResults';\nimport Services from './pages/Services';\nimport Flower from './pages/Flower';\nimport ChefsRecomendations from './pages/ChefsRecomendations';\nimport Edibles from './pages/Edibles';\nimport ThcVapes from './pages/ThcVapes';\nimport Concentrates from './pages/Concentrates';\nimport PreRolled from './pages/PreRolled';\nimport page404 from './pages/404';\nimport UserInterface from './pages/UserInterface';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/\" }` }\n                    component={ Home }\n                />\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/about-us\" }` }\n                    component={ About }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/contacts\" }` }\n                    component={ Contacts }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/news\" }` }\n                    component={ News }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/gallery\" }` }\n                    component={ Gallery }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/news-single-post\" }` }\n                    component={ NewsSinglePost }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/search-results\" }` }\n                    component={ SearchResults }\n                /> */}\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/services\" }` }\n                    component={ Home }\n                />\n                  <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/form\" }` }\n                    component={ Home }\n                />\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/ui\" }` }\n                    component={ UserInterface }\n                /> */}\n                {/* <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/flower\" }` }\n                    component={ Flower }\n                />\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/chef's-recommendations\" }` }\n                    component={ ChefsRecomendations }\n                />\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/edibles-chocolates-candies-and-gummies\" }` }\n                    component={ Edibles }\n                />\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/thcvapes\" }` }\n                    component={ ThcVapes }\n                />\n\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/concentrates\" }` }\n                    component={ Concentrates }\n                />\n\n                 <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/prerolled\" }` }\n                    component={ PreRolled }\n                />\n\n                <Route\n                    exact\n                    path={ `${ process.env.PUBLIC_URL + \"/info\" }` }\n                    component={ About }\n                /> */}\n\n                <Route exact component={ page404 } />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register( config ) {\n    if ( process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator ) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL( process.env.PUBLIC_URL, window.location.href );\n\n        if ( publicUrl.origin !== window.location.origin ) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener( 'load', () => {\n            const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\n\n            if ( isLocalhost ) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker( swUrl, config );\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then( () => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                } );\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW( swUrl, config );\n            }\n        } );\n    }\n}\n\nfunction registerValidSW( swUrl, config ) {\n    navigator.serviceWorker.register( swUrl ).then( registration => {\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n\n            if ( installingWorker == null ) {\n                return;\n            }\n            installingWorker.onstatechange = () => {\n                if ( installingWorker.state === 'installed' ) {\n                    if ( navigator.serviceWorker.controller ) {\n                        // At this point, the updated precached content has been fetched,\n                        // but the previous service worker will still serve the older\n                        // content until all client tabs are closed.\n                        console.log(\n                            'New content is available and will be used when all ' +\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                        );\n\n                        // Execute callback\n                        if ( config && config.onUpdate ) {\n                            config.onUpdate( registration );\n                        }\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"Content is cached for offline use.\" message.\n                        console.log( 'Content is cached for offline use.' );\n\n                        // Execute callback\n                        if ( config && config.onSuccess ) {\n                            config.onSuccess( registration );\n                        }\n                    }\n                }\n            };\n        };\n    } ).catch( error => {\n        console.error( 'Error during service worker registration:', error );\n    } );\n}\n\nfunction checkValidServiceWorker( swUrl, config ) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch( swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    } ).then( response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get( 'content-type' );\n\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf( 'javascript' ) === -1)\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then( registration => {\n                registration.unregister().then( () => {\n                    window.location.reload();\n                } );\n            } );\n        } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW( swUrl, config );\n        }\n    } ).catch( () => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n    } );\n}\n\nexport function unregister() {\n    if ( 'serviceWorker' in navigator ) {\n        navigator.serviceWorker.ready.then( registration => {\n            registration.unregister();\n        } ).catch( error => {\n            console.error( error.message );\n        } );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/sass/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}